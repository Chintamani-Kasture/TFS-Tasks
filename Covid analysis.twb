<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20204.21.0511.0936                               -->
<workbook original-version='18.1' source-build='2020.4.5 (20204.21.0511.0936)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (owid-covid-data)' inline='true' name='federated.1o66dbp1u000re1ban7pp0bwv742' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='owid-covid-data' name='excel-direct.0obhl3i0wu9oax1c1soww0b5kibe'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/HP/Jyupter_notebooks/TFS internship/covid-19-data-master/covid-19-data-master/public/data/owid-covid-data.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0obhl3i0wu9oax1c1soww0b5kibe' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:BH10001:no:A1:BH10001:0' header='yes' outcome='6'>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' date-parse-format='yyyy-MM-dd' name='date' ordinal='3' />
            <column datatype='integer' name='total_cases' ordinal='4' />
            <column datatype='integer' name='new_cases' ordinal='5' />
            <column datatype='real' name='new_cases_smoothed' ordinal='6' />
            <column datatype='integer' name='total_deaths' ordinal='7' />
            <column datatype='integer' name='new_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
            <column datatype='real' name='total_cases_per_million' ordinal='10' />
            <column datatype='real' name='new_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
            <column datatype='real' name='total_deaths_per_million' ordinal='13' />
            <column datatype='real' name='new_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
            <column datatype='real' name='reproduction_rate' ordinal='16' />
            <column datatype='integer' name='icu_patients' ordinal='17' />
            <column datatype='real' name='icu_patients_per_million' ordinal='18' />
            <column datatype='integer' name='hosp_patients' ordinal='19' />
            <column datatype='real' name='hosp_patients_per_million' ordinal='20' />
            <column datatype='string' name='weekly_icu_admissions' ordinal='21' />
            <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='22' />
            <column datatype='real' name='weekly_hosp_admissions' ordinal='23' />
            <column datatype='real' name='weekly_hosp_admissions_per_million' ordinal='24' />
            <column datatype='integer' name='new_tests' ordinal='25' />
            <column datatype='integer' name='total_tests' ordinal='26' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
            <column datatype='real' name='new_tests_per_thousand' ordinal='28' />
            <column datatype='integer' name='new_tests_smoothed' ordinal='29' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
            <column datatype='real' name='positive_rate' ordinal='31' />
            <column datatype='real' name='tests_per_case' ordinal='32' />
            <column datatype='string' name='tests_units' ordinal='33' />
            <column datatype='integer' name='total_vaccinations' ordinal='34' />
            <column datatype='integer' name='people_vaccinated' ordinal='35' />
            <column datatype='integer' name='people_fully_vaccinated' ordinal='36' />
            <column datatype='integer' name='new_vaccinations' ordinal='37' />
            <column datatype='integer' name='new_vaccinations_smoothed' ordinal='38' />
            <column datatype='real' name='total_vaccinations_per_hundred' ordinal='39' />
            <column datatype='real' name='people_vaccinated_per_hundred' ordinal='40' />
            <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='41' />
            <column datatype='integer' name='new_vaccinations_smoothed_per_million' ordinal='42' />
            <column datatype='real' name='stringency_index' ordinal='43' />
            <column datatype='integer' name='population' ordinal='44' />
            <column datatype='real' name='population_density' ordinal='45' />
            <column datatype='real' name='median_age' ordinal='46' />
            <column datatype='real' name='aged_65_older' ordinal='47' />
            <column datatype='real' name='aged_70_older' ordinal='48' />
            <column datatype='real' name='gdp_per_capita' ordinal='49' />
            <column datatype='real' name='extreme_poverty' ordinal='50' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='51' />
            <column datatype='real' name='diabetes_prevalence' ordinal='52' />
            <column datatype='real' name='female_smokers' ordinal='53' />
            <column datatype='real' name='male_smokers' ordinal='54' />
            <column datatype='real' name='handwashing_facilities' ordinal='55' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='56' />
            <column datatype='real' name='life_expectancy' ordinal='57' />
            <column datatype='real' name='human_development_index' ordinal='58' />
            <column datatype='real' name='excess_mortality' ordinal='59' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0obhl3i0wu9oax1c1soww0b5kibe' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:BH10001:no:A1:BH10001:0' header='yes' outcome='6'>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' date-parse-format='yyyy-MM-dd' name='date' ordinal='3' />
            <column datatype='integer' name='total_cases' ordinal='4' />
            <column datatype='integer' name='new_cases' ordinal='5' />
            <column datatype='real' name='new_cases_smoothed' ordinal='6' />
            <column datatype='integer' name='total_deaths' ordinal='7' />
            <column datatype='integer' name='new_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
            <column datatype='real' name='total_cases_per_million' ordinal='10' />
            <column datatype='real' name='new_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
            <column datatype='real' name='total_deaths_per_million' ordinal='13' />
            <column datatype='real' name='new_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
            <column datatype='real' name='reproduction_rate' ordinal='16' />
            <column datatype='integer' name='icu_patients' ordinal='17' />
            <column datatype='real' name='icu_patients_per_million' ordinal='18' />
            <column datatype='integer' name='hosp_patients' ordinal='19' />
            <column datatype='real' name='hosp_patients_per_million' ordinal='20' />
            <column datatype='string' name='weekly_icu_admissions' ordinal='21' />
            <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='22' />
            <column datatype='real' name='weekly_hosp_admissions' ordinal='23' />
            <column datatype='real' name='weekly_hosp_admissions_per_million' ordinal='24' />
            <column datatype='integer' name='new_tests' ordinal='25' />
            <column datatype='integer' name='total_tests' ordinal='26' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
            <column datatype='real' name='new_tests_per_thousand' ordinal='28' />
            <column datatype='integer' name='new_tests_smoothed' ordinal='29' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
            <column datatype='real' name='positive_rate' ordinal='31' />
            <column datatype='real' name='tests_per_case' ordinal='32' />
            <column datatype='string' name='tests_units' ordinal='33' />
            <column datatype='integer' name='total_vaccinations' ordinal='34' />
            <column datatype='integer' name='people_vaccinated' ordinal='35' />
            <column datatype='integer' name='people_fully_vaccinated' ordinal='36' />
            <column datatype='integer' name='new_vaccinations' ordinal='37' />
            <column datatype='integer' name='new_vaccinations_smoothed' ordinal='38' />
            <column datatype='real' name='total_vaccinations_per_hundred' ordinal='39' />
            <column datatype='real' name='people_vaccinated_per_hundred' ordinal='40' />
            <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='41' />
            <column datatype='integer' name='new_vaccinations_smoothed_per_million' ordinal='42' />
            <column datatype='real' name='stringency_index' ordinal='43' />
            <column datatype='integer' name='population' ordinal='44' />
            <column datatype='real' name='population_density' ordinal='45' />
            <column datatype='real' name='median_age' ordinal='46' />
            <column datatype='real' name='aged_65_older' ordinal='47' />
            <column datatype='real' name='aged_70_older' ordinal='48' />
            <column datatype='real' name='gdp_per_capita' ordinal='49' />
            <column datatype='real' name='extreme_poverty' ordinal='50' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='51' />
            <column datatype='real' name='diabetes_prevalence' ordinal='52' />
            <column datatype='real' name='female_smokers' ordinal='53' />
            <column datatype='real' name='male_smokers' ordinal='54' />
            <column datatype='real' name='handwashing_facilities' ordinal='55' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='56' />
            <column datatype='real' name='life_expectancy' ordinal='57' />
            <column datatype='real' name='human_development_index' ordinal='58' />
            <column datatype='real' name='excess_mortality' ordinal='59' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:BH10001:no:A1:BH10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_cases_smoothed</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_deaths_smoothed</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_cases_per_million</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_cases_smoothed_per_million</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_deaths_per_million</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_deaths_smoothed_per_million</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reproduction_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[reproduction_rate]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>reproduction_rate</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[icu_patients]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>icu_patients</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[icu_patients_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>icu_patients_per_million</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hosp_patients]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>hosp_patients</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hosp_patients_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>hosp_patients_per_million</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions</remote-name>
            <remote-type>130</remote-type>
            <local-name>[weekly_icu_admissions]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>weekly_icu_admissions</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions_per_million</remote-name>
            <remote-type>130</remote-type>
            <local-name>[weekly_icu_admissions_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>weekly_icu_admissions_per_million</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weekly_hosp_admissions]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>weekly_hosp_admissions</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weekly_hosp_admissions_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>weekly_hosp_admissions_per_million</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_tests]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_tests</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests_per_thousand]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_tests_per_thousand</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_per_thousand]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_tests_per_thousand</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_tests_smoothed]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_tests_smoothed</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed_per_thousand]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_tests_smoothed_per_thousand</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positive_rate]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>positive_rate</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_per_case</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tests_per_case]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>tests_per_case</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_units</remote-name>
            <remote-type>130</remote-type>
            <local-name>[tests_units]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>tests_units</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_vaccinations]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_vaccinations</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated</remote-name>
            <remote-type>20</remote-type>
            <local-name>[people_vaccinated]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>people_vaccinated</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated</remote-name>
            <remote-type>20</remote-type>
            <local-name>[people_fully_vaccinated]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>people_fully_vaccinated</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_vaccinations]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_vaccinations</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_vaccinations_smoothed]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_vaccinations_smoothed</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_vaccinations_per_hundred]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_vaccinations_per_hundred</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_vaccinated_per_hundred]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>people_vaccinated_per_hundred</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_fully_vaccinated_per_hundred]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>people_fully_vaccinated_per_hundred</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed_per_million</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_vaccinations_smoothed_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_vaccinations_smoothed_per_million</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stringency_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stringency_index]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>stringency_index</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_age]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>median_age</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_65_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_65_older]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>aged_65_older</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_70_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_70_older]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>aged_70_older</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extreme_poverty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[extreme_poverty]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>extreme_poverty</remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cardiovasc_death_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cardiovasc_death_rate]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>cardiovasc_death_rate</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diabetes_prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diabetes_prevalence]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>diabetes_prevalence</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[female_smokers]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>female_smokers</remote-alias>
            <ordinal>53</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[male_smokers]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>male_smokers</remote-alias>
            <ordinal>54</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>handwashing_facilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[handwashing_facilities]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>handwashing_facilities</remote-alias>
            <ordinal>55</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>56</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>57</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>human_development_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[human_development_index]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>human_development_index</remote-alias>
            <ordinal>58</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>excess_mortality</remote-name>
            <remote-type>5</remote-type>
            <local-name>[excess_mortality]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>excess_mortality</remote-alias>
            <ordinal>59</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='month' datatype='integer' name='[Calculation_499899613923352576]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MONTH([date])' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_0B08F859ABE7404F885E123FA1A94CC5]' role='measure' type='quantitative' />
      <column caption='Aged 65 Older' datatype='real' name='[aged_65_older]' role='measure' type='quantitative' />
      <column caption='Aged 70 Older' datatype='real' name='[aged_70_older]' role='measure' type='quantitative' />
      <column caption='Cardiovasc Death Rate' datatype='real' name='[cardiovasc_death_rate]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Diabetes Prevalence' datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
      <column caption='Excess Mortality' datatype='real' name='[excess_mortality]' role='measure' type='quantitative' />
      <column caption='Extreme Poverty' datatype='real' name='[extreme_poverty]' role='measure' type='quantitative' />
      <column caption='Female Smokers' datatype='real' name='[female_smokers]' role='measure' type='quantitative' />
      <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
      <column caption='Handwashing Facilities' datatype='real' name='[handwashing_facilities]' role='measure' type='quantitative' />
      <column caption='Hosp Patients' datatype='integer' name='[hosp_patients]' role='measure' type='quantitative' />
      <column caption='Hosp Patients Per Million' datatype='real' name='[hosp_patients_per_million]' role='measure' type='quantitative' />
      <column caption='Hospital Beds Per Thousand' datatype='real' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
      <column caption='Human Development Index' datatype='real' name='[human_development_index]' role='measure' type='quantitative' />
      <column caption='Icu Patients' datatype='integer' name='[icu_patients]' role='measure' type='quantitative' />
      <column caption='Icu Patients Per Million' datatype='real' name='[icu_patients_per_million]' role='measure' type='quantitative' />
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' type='nominal' />
      <column caption='Life Expectancy' datatype='real' name='[life_expectancy]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Male Smokers' datatype='real' name='[male_smokers]' role='measure' type='quantitative' />
      <column caption='Median Age' datatype='real' name='[median_age]' role='measure' type='quantitative' />
      <column caption='New Cases' datatype='integer' name='[new_cases]' role='measure' type='quantitative' />
      <column caption='New Cases Per Million' datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed' datatype='real' name='[new_cases_smoothed]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed Per Million' datatype='real' name='[new_cases_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='integer' name='[new_deaths]' role='measure' type='quantitative' />
      <column caption='New Deaths Per Million' datatype='real' name='[new_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed' datatype='real' name='[new_deaths_smoothed]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed Per Million' datatype='real' name='[new_deaths_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Tests' datatype='integer' name='[new_tests]' role='measure' type='quantitative' />
      <column caption='New Tests Per Thousand' datatype='real' name='[new_tests_per_thousand]' role='measure' type='quantitative' />
      <column caption='New Tests Smoothed' datatype='integer' name='[new_tests_smoothed]' role='measure' type='quantitative' />
      <column caption='New Tests Smoothed Per Thousand' datatype='real' name='[new_tests_smoothed_per_thousand]' role='measure' type='quantitative' />
      <column caption='New Vaccinations' datatype='integer' name='[new_vaccinations]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed' datatype='integer' name='[new_vaccinations_smoothed]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed Per Million' datatype='integer' name='[new_vaccinations_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated' datatype='integer' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated Per Hundred' datatype='real' name='[people_fully_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='People Vaccinated' datatype='integer' name='[people_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Vaccinated Per Hundred' datatype='real' name='[people_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Population Density' datatype='real' name='[population_density]' role='measure' type='quantitative' />
      <column caption='Positive Rate' datatype='real' name='[positive_rate]' role='measure' type='quantitative' />
      <column caption='Reproduction Rate' datatype='real' name='[reproduction_rate]' role='measure' type='quantitative' />
      <column caption='Stringency Index' datatype='real' name='[stringency_index]' role='measure' type='quantitative' />
      <column caption='Tests Per Case' datatype='real' name='[tests_per_case]' role='measure' type='quantitative' />
      <column caption='Tests Units' datatype='string' name='[tests_units]' role='dimension' type='nominal' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='integer' name='[total_tests]' role='measure' type='quantitative' />
      <column caption='Total Tests Per Thousand' datatype='real' name='[total_tests_per_thousand]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations' datatype='integer' name='[total_vaccinations]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations Per Hundred' datatype='real' name='[total_vaccinations_per_hundred]' role='measure' type='quantitative' />
      <column caption='Weekly Hosp Admissions' datatype='real' name='[weekly_hosp_admissions]' role='measure' type='quantitative' />
      <column caption='Weekly Hosp Admissions Per Million' datatype='real' name='[weekly_hosp_admissions_per_million]' role='measure' type='quantitative' />
      <column caption='Weekly Icu Admissions' datatype='string' name='[weekly_icu_admissions]' role='dimension' type='nominal' />
      <column caption='Weekly Icu Admissions Per Million' datatype='string' name='[weekly_icu_admissions_per_million]' role='dimension' type='nominal' />
      <column-instance column='[Calculation_499899613923352576]' derivation='None' name='[none:Calculation_499899613923352576:qk]' pivot='key' type='quantitative' />
      <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_499899613923352576]' derivation='Sum' name='[sum:Calculation_499899613923352576:qk]' pivot='key' type='quantitative' />
      <column-instance column='[aged_65_older]' derivation='Sum' name='[sum:aged_65_older:qk]' pivot='key' type='quantitative' />
      <column-instance column='[aged_70_older]' derivation='Sum' name='[sum:aged_70_older:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cardiovasc_death_rate]' derivation='Sum' name='[sum:cardiovasc_death_rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[diabetes_prevalence]' derivation='Sum' name='[sum:diabetes_prevalence:qk]' pivot='key' type='quantitative' />
      <column-instance column='[female_smokers]' derivation='Sum' name='[sum:female_smokers:qk]' pivot='key' type='quantitative' />
      <column-instance column='[life_expectancy]' derivation='Sum' name='[sum:life_expectancy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[male_smokers]' derivation='Sum' name='[sum:male_smokers:qk]' pivot='key' type='quantitative' />
      <column-instance column='[median_age]' derivation='Sum' name='[sum:median_age:qk]' pivot='key' type='quantitative' />
      <column-instance column='[positive_rate]' derivation='Sum' name='[sum:positive_rate:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Continent,Location)' hidden='true' name='[Action (Continent,Location)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[continent]' />
          <groupfilter function='level-members' level='[location]' />
        </groupfilter>
      </group>
      <group caption='Action (Location)' hidden='true' name='[Action (Location)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[location]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:continent:nk]' palette='red_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#f26250'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:location:nk]' palette='orange_10_0' type='palette'>
            <map to='#9e3d22'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#9e3d22'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#9e3d22'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a03e22'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#a03e22'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#a13e22'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#a23f22'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#a33f22'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#a34022'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#a44022'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#a54022'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#a64122'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#a64122'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#a84222'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#a84222'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#a94222'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#a94322'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#aa4322'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#ab4422'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#ac4422'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#ad4522'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#ae4522'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#af4623'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#af4623'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#b14723'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#b24823'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#b44823'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#b54923'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#b54923'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#b64923'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b64a23'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b84a23'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b84b23'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#b94b23'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ba4c23'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#bb4c23'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#bb4c23'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#bc4d23'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#bd4d23'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#bd4d23'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#be4d23'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#be4e23'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#c04f22'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#c04f22'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#c04f22'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#c14f22'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#c25022'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#c35122'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#c35122'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#c45122'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#c55122'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#c55222'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#c65222'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#c75322'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#c75322'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#c85322'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#c85322'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#c95422'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ca5422'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#ca5422'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#cb5522'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#cc5522'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#cd5622'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#cd5622'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#ce5722'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#cf5722'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#cf5722'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#d15821'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d25921'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#d35a21'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#d45a21'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#d45a21'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d55b21'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#d65b21'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d75c21'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d75c21'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d75c21'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#d85d20'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d95d20'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#da5d20'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#db5e20'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#db5e20'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#dc5f20'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#dd6020'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#de6020'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#de6020'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#df6120'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#e06120'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#e16220'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#e16320'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e16320'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#e26320'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#e36420'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#e36420'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#e46520'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#e46520'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#e46520'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#e56620'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#e56720'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#e66820'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#e76820'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#e76920'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#e86a20'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#e96b20'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#e96b20'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#e96b20'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#ea6c20'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ea6c20'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#eb6d20'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#eb6d20'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ec6e20'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#ed7021'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#ed7121'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#ed7221'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#ee7322'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#ee7423'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#ee7523'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#ef7724'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#ef7824'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ef7825'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ef7925'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#f07a26'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#f07c27'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#f07d27'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#f17f28'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#f18029'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#f18029'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#f2822a'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f2832a'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#f2832b'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#f2842b'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#f2842b'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f2852c'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f2862c'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f2872d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#f2882d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f2882d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f3882e'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#f3892e'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f38a2f'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#f38b2f'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#f38c30'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f38c30'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f38d31'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#f48e32'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#f48f32'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#f48f32'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f49033'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f49133'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#f49234'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#f49234'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#f49335'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f49335'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f49435'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#f59536'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#f59637'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f59737'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#f59738'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f59738'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#f59839'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#f5993a'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#f59a3a'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f59b3b'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f59b3b'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#f59c3c'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#f59c3d'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#f59d3d'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#f59e3e'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#f59f3f'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#f59f3f'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f5a03f'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#f5a140'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#f5a141'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#f5a242'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#f5a342'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#f5a342'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f5a443'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f5a544'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#f5a645'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#f5a645'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#f5a746'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f5a746'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#f5a847'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#f5a949'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f5aa4c'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f5aa4c'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#f6ab4d'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f6ab4e'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#f6ac50'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#f6ad51'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#f6ad52'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f6ad53'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#f7ae54'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#f7af57'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#f7b058'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#f7b059'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#f7b05a'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f8b25c'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#f8b25e'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f8b35f'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f8b35f'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#f9b461'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f9b462'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#f9b563'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#f9b666'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#f9b666'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#fab768'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#fab869'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#fab86a'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#fab96c'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fab96c'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#fbba6d'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#fbbc71'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fbbc72'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#fcbd73'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#fcbe75'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#fcbe76'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#fcbf77'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#fcbf78'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#fdc07a'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#fdc17b'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#fdc27d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#fdc27e'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#fdc27e'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#fec37f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#fec481'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#fec482'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#fec583'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#ffc685'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:aged_65_older:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:life_expectancy:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:female_smokers:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:positive_rate:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:median_age:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1o66dbp1u000re1ban7pp0bwv742].[none:Calculation_499899613923352576:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:Calculation_499899613923352576:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:diabetes_prevalence:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:male_smokers:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:aged_70_older:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:cardiovasc_death_rate:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_0B08F859ABE7404F885E123FA1A94CC5'>
            <properties context=''>
              <relation connection='excel-direct.0obhl3i0wu9oax1c1soww0b5kibe' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:BH10001:no:A1:BH10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='iso_code' ordinal='0' />
                  <column datatype='string' name='continent' ordinal='1' />
                  <column datatype='string' name='location' ordinal='2' />
                  <column datatype='date' date-parse-format='yyyy-MM-dd' name='date' ordinal='3' />
                  <column datatype='integer' name='total_cases' ordinal='4' />
                  <column datatype='integer' name='new_cases' ordinal='5' />
                  <column datatype='real' name='new_cases_smoothed' ordinal='6' />
                  <column datatype='integer' name='total_deaths' ordinal='7' />
                  <column datatype='integer' name='new_deaths' ordinal='8' />
                  <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
                  <column datatype='real' name='total_cases_per_million' ordinal='10' />
                  <column datatype='real' name='new_cases_per_million' ordinal='11' />
                  <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
                  <column datatype='real' name='total_deaths_per_million' ordinal='13' />
                  <column datatype='real' name='new_deaths_per_million' ordinal='14' />
                  <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
                  <column datatype='real' name='reproduction_rate' ordinal='16' />
                  <column datatype='integer' name='icu_patients' ordinal='17' />
                  <column datatype='real' name='icu_patients_per_million' ordinal='18' />
                  <column datatype='integer' name='hosp_patients' ordinal='19' />
                  <column datatype='real' name='hosp_patients_per_million' ordinal='20' />
                  <column datatype='string' name='weekly_icu_admissions' ordinal='21' />
                  <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='22' />
                  <column datatype='real' name='weekly_hosp_admissions' ordinal='23' />
                  <column datatype='real' name='weekly_hosp_admissions_per_million' ordinal='24' />
                  <column datatype='integer' name='new_tests' ordinal='25' />
                  <column datatype='integer' name='total_tests' ordinal='26' />
                  <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
                  <column datatype='real' name='new_tests_per_thousand' ordinal='28' />
                  <column datatype='integer' name='new_tests_smoothed' ordinal='29' />
                  <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
                  <column datatype='real' name='positive_rate' ordinal='31' />
                  <column datatype='real' name='tests_per_case' ordinal='32' />
                  <column datatype='string' name='tests_units' ordinal='33' />
                  <column datatype='integer' name='total_vaccinations' ordinal='34' />
                  <column datatype='integer' name='people_vaccinated' ordinal='35' />
                  <column datatype='integer' name='people_fully_vaccinated' ordinal='36' />
                  <column datatype='integer' name='new_vaccinations' ordinal='37' />
                  <column datatype='integer' name='new_vaccinations_smoothed' ordinal='38' />
                  <column datatype='real' name='total_vaccinations_per_hundred' ordinal='39' />
                  <column datatype='real' name='people_vaccinated_per_hundred' ordinal='40' />
                  <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='41' />
                  <column datatype='integer' name='new_vaccinations_smoothed_per_million' ordinal='42' />
                  <column datatype='real' name='stringency_index' ordinal='43' />
                  <column datatype='integer' name='population' ordinal='44' />
                  <column datatype='real' name='population_density' ordinal='45' />
                  <column datatype='real' name='median_age' ordinal='46' />
                  <column datatype='real' name='aged_65_older' ordinal='47' />
                  <column datatype='real' name='aged_70_older' ordinal='48' />
                  <column datatype='real' name='gdp_per_capita' ordinal='49' />
                  <column datatype='real' name='extreme_poverty' ordinal='50' />
                  <column datatype='real' name='cardiovasc_death_rate' ordinal='51' />
                  <column datatype='real' name='diabetes_prevalence' ordinal='52' />
                  <column datatype='real' name='female_smokers' ordinal='53' />
                  <column datatype='real' name='male_smokers' ordinal='54' />
                  <column datatype='real' name='handwashing_facilities' ordinal='55' />
                  <column datatype='real' name='hospital_beds_per_thousand' ordinal='56' />
                  <column datatype='real' name='life_expectancy' ordinal='57' />
                  <column datatype='real' name='human_development_index' ordinal='58' />
                  <column datatype='real' name='excess_mortality' ordinal='59' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.1o66dbp1u000re1ban7pp0bwv742'>
      <datasources>
        <datasource caption='Sheet1 (owid-covid-data)' name='federated.1o66dbp1u000re1ban7pp0bwv742' />
      </datasources>
      <datasource-dependencies datasource='federated.1o66dbp1u000re1ban7pp0bwv742'>
        <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
        <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1o66dbp1u000re1ban7pp0bwv742].[none:location:nk]'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:location:nk]' to='&quot;Thailand&quot;' />
          <groupfilter from='&quot;Togo&quot;' function='range' level='[none:location:nk]' to='&quot;Zimbabwe&quot;' />
        </groupfilter>
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Global' name='[Action4]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Covid Analysis Dashboard' type='sheet' worksheet='Total Covid cases per country in Asia' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Covid Analysis Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Chart showing various details of different countries'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.1o66dbp1u000re1ban7pp0bwv742' />
          </datasources>
          <datasource-dependencies datasource='federated.1o66dbp1u000re1ban7pp0bwv742'>
            <column caption='Aged 65 Older' datatype='real' name='[aged_65_older]' role='measure' type='quantitative' />
            <column caption='Aged 70 Older' datatype='real' name='[aged_70_older]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Diabetes Prevalence' datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
            <column caption='Female Smokers' datatype='real' name='[female_smokers]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Male Smokers' datatype='real' name='[male_smokers]' role='measure' type='quantitative' />
            <column caption='Median Age' datatype='real' name='[median_age]' role='measure' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[new_cases]' role='measure' type='quantitative' />
            <column caption='New Deaths' datatype='integer' name='[new_deaths]' role='measure' type='quantitative' />
            <column caption='New Tests' datatype='integer' name='[new_tests]' role='measure' type='quantitative' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[aged_65_older]' derivation='Sum' name='[sum:aged_65_older:qk]' pivot='key' type='quantitative' />
            <column-instance column='[aged_70_older]' derivation='Sum' name='[sum:aged_70_older:qk]' pivot='key' type='quantitative' />
            <column-instance column='[diabetes_prevalence]' derivation='Sum' name='[sum:diabetes_prevalence:qk]' pivot='key' type='quantitative' />
            <column-instance column='[female_smokers]' derivation='Sum' name='[sum:female_smokers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[male_smokers]' derivation='Sum' name='[sum:male_smokers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[median_age]' derivation='Sum' name='[sum:median_age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_deaths]' derivation='Sum' name='[sum:new_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_tests]' derivation='Sum' name='[sum:new_tests:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_tests]' derivation='Sum' name='[sum:total_tests:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
            <column caption='Total Tests' datatype='integer' name='[total_tests]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1o66dbp1u000re1ban7pp0bwv742].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:aged_65_older:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:aged_70_older:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:female_smokers:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:diabetes_prevalence:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:male_smokers:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:median_age:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:new_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:new_deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:new_tests:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:population:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:total_deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:total_tests:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1o66dbp1u000re1ban7pp0bwv742].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:aged_65_older:qk]&quot;</bucket>
              <bucket>&quot;[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:aged_70_older:qk]&quot;</bucket>
              <bucket>&quot;[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:female_smokers:qk]&quot;</bucket>
              <bucket>&quot;[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:diabetes_prevalence:qk]&quot;</bucket>
              <bucket>&quot;[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:male_smokers:qk]&quot;</bucket>
              <bucket>&quot;[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:median_age:qk]&quot;</bucket>
              <bucket>&quot;[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:new_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:new_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:new_tests:qk]&quot;</bucket>
              <bucket>&quot;[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:population:qk]&quot;</bucket>
              <bucket>&quot;[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:total_tests:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1o66dbp1u000re1ban7pp0bwv742].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1o66dbp1u000re1ban7pp0bwv742].[none:continent:nk]'>
            <groupfilter function='member' level='[none:continent:nk]' member='&quot;Asia&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1o66dbp1u000re1ban7pp0bwv742].[none:continent:nk]</column>
            <column>[federated.1o66dbp1u000re1ban7pp0bwv742].[:Measure Names]</column>
            <column>[federated.1o66dbp1u000re1ban7pp0bwv742].[none:location:nk]</column>
            <column>[federated.1o66dbp1u000re1ban7pp0bwv742].[Action (Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1o66dbp1u000re1ban7pp0bwv742].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1o66dbp1u000re1ban7pp0bwv742].[none:continent:nk] / [federated.1o66dbp1u000re1ban7pp0bwv742].[none:location:nk])</rows>
        <cols>[federated.1o66dbp1u000re1ban7pp0bwv742].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{F872432E-AF4E-442E-9CD4-3A6476682E5E}' />
    </worksheet>
    <worksheet name='Covid Patients with Other Cronical Diseases'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.1o66dbp1u000re1ban7pp0bwv742' />
          </datasources>
          <datasource-dependencies datasource='federated.1o66dbp1u000re1ban7pp0bwv742'>
            <column caption='Aged 65 Older' datatype='real' name='[aged_65_older]' role='measure' type='quantitative' />
            <column caption='Aged 70 Older' datatype='real' name='[aged_70_older]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Diabetes Prevalence' datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
            <column caption='Female Smokers' datatype='real' name='[female_smokers]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Male Smokers' datatype='real' name='[male_smokers]' role='measure' type='quantitative' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[aged_65_older]' derivation='Sum' name='[sum:aged_65_older:qk]' pivot='key' type='quantitative' />
            <column-instance column='[aged_70_older]' derivation='Sum' name='[sum:aged_70_older:qk]' pivot='key' type='quantitative' />
            <column-instance column='[diabetes_prevalence]' derivation='Sum' name='[sum:diabetes_prevalence:qk]' pivot='key' type='quantitative' />
            <column-instance column='[female_smokers]' derivation='Sum' name='[sum:female_smokers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[male_smokers]' derivation='Sum' name='[sum:male_smokers:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1o66dbp1u000re1ban7pp0bwv742].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:male_smokers:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:female_smokers:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:diabetes_prevalence:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:aged_70_older:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:aged_65_older:qk]&quot;' />
            </groupfilter>
          </filter>
          <alphabetic-sort column='[federated.1o66dbp1u000re1ban7pp0bwv742].[:Measure Names]' direction='DESC' />
          <filter class='categorical' column='[federated.1o66dbp1u000re1ban7pp0bwv742].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1o66dbp1u000re1ban7pp0bwv742].[none:continent:nk]'>
            <groupfilter function='level-members' level='[none:continent:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1o66dbp1u000re1ban7pp0bwv742].[none:continent:nk]</column>
            <column>[federated.1o66dbp1u000re1ban7pp0bwv742].[:Measure Names]</column>
            <column>[federated.1o66dbp1u000re1ban7pp0bwv742].[none:location:nk]</column>
            <column>[federated.1o66dbp1u000re1ban7pp0bwv742].[Action (Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1o66dbp1u000re1ban7pp0bwv742].[:Measure Names]' />
              <text column='[federated.1o66dbp1u000re1ban7pp0bwv742].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1o66dbp1u000re1ban7pp0bwv742].[:Measure Names]</rows>
        <cols>[federated.1o66dbp1u000re1ban7pp0bwv742].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{7F134FF8-F55E-4645-B8FF-E8F5CA7A31B5}' />
    </worksheet>
    <worksheet name='Month wise vaccination '>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.1o66dbp1u000re1ban7pp0bwv742' />
          </datasources>
          <datasource-dependencies datasource='federated.1o66dbp1u000re1ban7pp0bwv742'>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_vaccinations]' derivation='Sum' name='[sum:total_vaccinations:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Total Vaccinations' datatype='integer' name='[total_vaccinations]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1o66dbp1u000re1ban7pp0bwv742].[none:continent:nk]'>
            <groupfilter function='member' level='[none:continent:nk]' member='&quot;Asia&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1o66dbp1u000re1ban7pp0bwv742].[none:continent:nk]</column>
            <column>[federated.1o66dbp1u000re1ban7pp0bwv742].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:total_vaccinations:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:total_vaccinations:qk]</rows>
        <cols>[federated.1o66dbp1u000re1ban7pp0bwv742].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{B5888EED-239E-4435-9A30-3EFD72542B5E}' />
    </worksheet>
    <worksheet name='Monthly positive rate'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.1o66dbp1u000re1ban7pp0bwv742' />
          </datasources>
          <datasource-dependencies datasource='federated.1o66dbp1u000re1ban7pp0bwv742'>
            <column caption='month' datatype='integer' name='[Calculation_499899613923352576]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MONTH([date])' />
            </column>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Positive Rate' datatype='real' name='[positive_rate]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_499899613923352576]' derivation='Sum' name='[sum:Calculation_499899613923352576:qk]' pivot='key' type='quantitative' />
            <column-instance column='[positive_rate]' derivation='Sum' name='[sum:positive_rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1o66dbp1u000re1ban7pp0bwv742].[none:continent:nk]'>
            <groupfilter function='member' level='[none:continent:nk]' member='&quot;Asia&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:Calculation_499899613923352576:qk]' included-values='in-range'>
            <min>133</min>
            <max>17484</max>
          </filter>
          <filter class='quantitative' column='[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:positive_rate:qk]' included-values='in-range'>
            <min>3.5400000000000009</min>
            <max>83.96500000000016</max>
          </filter>
          <slices>
            <column>[federated.1o66dbp1u000re1ban7pp0bwv742].[none:continent:nk]</column>
            <column>[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:positive_rate:qk]</column>
            <column>[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:Calculation_499899613923352576:qk]</column>
            <column>[federated.1o66dbp1u000re1ban7pp0bwv742].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:Calculation_499899613923352576:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:positive_rate:qk]</rows>
        <cols>[federated.1o66dbp1u000re1ban7pp0bwv742].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{9C4F399A-C982-4D1E-842B-AD5132958B63}' />
    </worksheet>
    <worksheet name='Monthwise new cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.1o66dbp1u000re1ban7pp0bwv742' />
          </datasources>
          <datasource-dependencies datasource='federated.1o66dbp1u000re1ban7pp0bwv742'>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='New Cases' datatype='integer' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1o66dbp1u000re1ban7pp0bwv742].[none:continent:nk]'>
            <groupfilter function='member' level='[none:continent:nk]' member='&quot;Asia&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1o66dbp1u000re1ban7pp0bwv742].[none:continent:nk]</column>
            <column>[federated.1o66dbp1u000re1ban7pp0bwv742].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:new_cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:new_cases:qk]</rows>
        <cols>[federated.1o66dbp1u000re1ban7pp0bwv742].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{E0AE3A3A-2D33-4694-9A52-19425FF6CFFE}' />
    </worksheet>
    <worksheet name='Monthwise total cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.1o66dbp1u000re1ban7pp0bwv742' />
          </datasources>
          <datasource-dependencies datasource='federated.1o66dbp1u000re1ban7pp0bwv742'>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1o66dbp1u000re1ban7pp0bwv742].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1o66dbp1u000re1ban7pp0bwv742].[none:continent:nk]'>
            <groupfilter function='level-members' level='[none:continent:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1o66dbp1u000re1ban7pp0bwv742].[none:continent:nk]</column>
            <column>[federated.1o66dbp1u000re1ban7pp0bwv742].[none:location:nk]</column>
            <column>[federated.1o66dbp1u000re1ban7pp0bwv742].[Action (Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:total_cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#4e79a7' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:total_cases:qk]</rows>
        <cols>[federated.1o66dbp1u000re1ban7pp0bwv742].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{31D313DF-7956-44E8-A763-C2559FF23EB2}' />
    </worksheet>
    <worksheet name='Monthwise total death'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.1o66dbp1u000re1ban7pp0bwv742' />
          </datasources>
          <datasource-dependencies datasource='federated.1o66dbp1u000re1ban7pp0bwv742'>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1o66dbp1u000re1ban7pp0bwv742].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1o66dbp1u000re1ban7pp0bwv742].[none:continent:nk]'>
            <groupfilter function='level-members' level='[none:continent:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1o66dbp1u000re1ban7pp0bwv742].[none:continent:nk]</column>
            <column>[federated.1o66dbp1u000re1ban7pp0bwv742].[none:location:nk]</column>
            <column>[federated.1o66dbp1u000re1ban7pp0bwv742].[Action (Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:total_deaths:qk]' value='false' />
            <format attr='break-on-special' field='[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:total_deaths:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:total_deaths:qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:total_deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:total_deaths:qk]</rows>
        <cols>[federated.1o66dbp1u000re1ban7pp0bwv742].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{55665153-D602-4FB0-9DA9-535C60155B22}' />
    </worksheet>
    <worksheet name='Total Cases in asia'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.1o66dbp1u000re1ban7pp0bwv742' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1o66dbp1u000re1ban7pp0bwv742'>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1o66dbp1u000re1ban7pp0bwv742].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1o66dbp1u000re1ban7pp0bwv742].[none:continent:nk]'>
            <groupfilter function='member' level='[none:continent:nk]' member='&quot;Asia&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1o66dbp1u000re1ban7pp0bwv742].[none:continent:nk]</column>
            <column>[federated.1o66dbp1u000re1ban7pp0bwv742].[none:location:nk]</column>
            <column>[federated.1o66dbp1u000re1ban7pp0bwv742].[Action (Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:total_cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1o66dbp1u000re1ban7pp0bwv742].[none:continent:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{AC1875E9-2C68-40CC-839D-622E72A653C3}' />
    </worksheet>
    <worksheet name='Total Covid cases per country in Asia'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.1o66dbp1u000re1ban7pp0bwv742' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1o66dbp1u000re1ban7pp0bwv742'>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1o66dbp1u000re1ban7pp0bwv742].[none:continent:nk]'>
            <groupfilter function='member' level='[none:continent:nk]' member='&quot;Asia&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1o66dbp1u000re1ban7pp0bwv742].[none:continent:nk]</column>
            <column>[federated.1o66dbp1u000re1ban7pp0bwv742].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1o66dbp1u000re1ban7pp0bwv742].[Longitude (generated)]' field-type='quantitative' max='21410623.184049673' min='80949.66279658' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1o66dbp1u000re1ban7pp0bwv742].[Latitude (generated)]' field-type='quantitative' max='8761460.2346170638' min='-822618.54034775216' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-color' data-class='subtotal' value='#000000' />
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1o66dbp1u000re1ban7pp0bwv742].[none:location:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1o66dbp1u000re1ban7pp0bwv742].[none:location:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1o66dbp1u000re1ban7pp0bwv742].[none:location:nk]' value='false' />
            <format attr='omit-on-special' field='[federated.1o66dbp1u000re1ban7pp0bwv742].[Latitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.1o66dbp1u000re1ban7pp0bwv742].[Latitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1o66dbp1u000re1ban7pp0bwv742].[Latitude (generated)]' value='false' />
            <format attr='omit-on-special' field='[federated.1o66dbp1u000re1ban7pp0bwv742].[Longitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.1o66dbp1u000re1ban7pp0bwv742].[Longitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1o66dbp1u000re1ban7pp0bwv742].[Longitude (generated)]' value='false' />
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='text-align' value='auto' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1o66dbp1u000re1ban7pp0bwv742].[none:location:nk]' />
              <text column='[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:total_cases:qk]' />
              <geometry column='[federated.1o66dbp1u000re1ban7pp0bwv742].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1o66dbp1u000re1ban7pp0bwv742].[Latitude (generated)]</rows>
        <cols>[federated.1o66dbp1u000re1ban7pp0bwv742].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{9BDA77F3-6EC2-412B-BCC4-CE22A8764ACA}' />
    </worksheet>
    <worksheet name='Total Death in asia'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.1o66dbp1u000re1ban7pp0bwv742' />
          </datasources>
          <datasource-dependencies datasource='federated.1o66dbp1u000re1ban7pp0bwv742'>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1o66dbp1u000re1ban7pp0bwv742].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1o66dbp1u000re1ban7pp0bwv742].[none:continent:nk]'>
            <groupfilter function='member' level='[none:continent:nk]' member='&quot;Asia&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1o66dbp1u000re1ban7pp0bwv742].[none:continent:nk]</column>
            <column>[federated.1o66dbp1u000re1ban7pp0bwv742].[none:location:nk]</column>
            <column>[federated.1o66dbp1u000re1ban7pp0bwv742].[Action (Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1o66dbp1u000re1ban7pp0bwv742].[sum:total_deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1o66dbp1u000re1ban7pp0bwv742].[none:continent:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{3731E851-FBE2-428C-ACF0-E027BBC97C12}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Covid Analysis Dashboard'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='25' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97298' id='28' param='vert' w='98614' x='693' y='1351'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='97298' id='26' w='98614' x='693' y='1351' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='47128' id='16' name='Total Covid cases per country in Asia' w='45380' x='18478' y='9459' />
        <zone h='23986' id='21' name='Total Cases in asia' w='17844' x='272' y='9628' />
        <zone h='44932' id='18' name='Chart showing various details of different countries' w='34964' x='64312' y='8953' />
        <zone h='39696' id='19' name='Covid Patients with Other Cronical Diseases' w='33333' x='996' y='58446' />
        <zone h='22297' id='22' name='Total Death in asia' w='17482' x='453' y='32939' />
        <zone h='36318' id='23' name='Monthwise total cases' w='30072' x='68841' y='57770' />
        <zone h='38514' id='24' name='Monthwise total death' w='33333' x='34511' y='58615' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1850' minheight='1850' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='44' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97298' id='43' param='vert' w='98614' x='693' y='1351'>
                <zone fixed-size='280' h='44932' id='18' is-fixed='true' name='Chart showing various details of different countries' w='34964' x='64312' y='8953'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47128' id='16' is-fixed='true' name='Total Covid cases per country in Asia' w='45380' x='18478' y='9459'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='192' h='23986' id='21' is-fixed='true' name='Total Cases in asia' w='17844' x='272' y='9628'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='178' h='22297' id='22' is-fixed='true' name='Total Death in asia' w='17482' x='453' y='32939'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36318' id='23' is-fixed='true' name='Monthwise total cases' w='30072' x='68841' y='57770'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39696' id='19' is-fixed='true' name='Covid Patients with Other Cronical Diseases' w='33333' x='996' y='58446'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38514' id='24' is-fixed='true' name='Monthwise total death' w='33333' x='34511' y='58615'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5FC3DD09-59A2-4887-BCD0-A5ABEAF4113E}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Total Covid cases per country in Asia'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1o66dbp1u000re1ban7pp0bwv742].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1o66dbp1u000re1ban7pp0bwv742].[none:location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{C8EFE24D-442E-4BC1-9FFA-4D9BD180BC5B}' />
    </window>
    <window class='worksheet' name='Chart showing various details of different countries'>
      <cards>
        <edge name='left'>
          <strip size='154'>
            <card size='69' type='filters' />
            <card size='175' type='marks' />
            <card size='238' type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1o66dbp1u000re1ban7pp0bwv742].[none:continent:nk]</field>
            <field>[federated.1o66dbp1u000re1ban7pp0bwv742].[none:location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{40871984-2B3D-4D59-8E5F-FAE89CB1237A}' />
    </window>
    <window class='worksheet' name='Covid Patients with Other Cronical Diseases'>
      <cards>
        <edge name='left'>
          <strip size='207'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1o66dbp1u000re1ban7pp0bwv742].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1o66dbp1u000re1ban7pp0bwv742].[:Measure Names]</field>
            <field>[federated.1o66dbp1u000re1ban7pp0bwv742].[none:continent:nk]</field>
            <field>[federated.1o66dbp1u000re1ban7pp0bwv742].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9720AB2B-9399-476C-9AE4-95DBB46BA4A8}' />
    </window>
    <window class='worksheet' name='Monthly positive rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1o66dbp1u000re1ban7pp0bwv742].[:Measure Names]</field>
            <field>[federated.1o66dbp1u000re1ban7pp0bwv742].[mn:date:ok]</field>
            <field>[federated.1o66dbp1u000re1ban7pp0bwv742].[none:Calculation_499899613923352576:qk]</field>
            <field>[federated.1o66dbp1u000re1ban7pp0bwv742].[none:continent:nk]</field>
            <field>[federated.1o66dbp1u000re1ban7pp0bwv742].[none:date:nk]</field>
            <field>[federated.1o66dbp1u000re1ban7pp0bwv742].[none:location:nk]</field>
            <field>[federated.1o66dbp1u000re1ban7pp0bwv742].[none:positive_rate:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{D6C0B421-A803-4400-9F33-CC9C6EBE5732}' />
    </window>
    <window class='worksheet' name='Monthwise total cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1o66dbp1u000re1ban7pp0bwv742].[none:continent:nk]</field>
            <field>[federated.1o66dbp1u000re1ban7pp0bwv742].[none:location:nk]</field>
            <field>[federated.1o66dbp1u000re1ban7pp0bwv742].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{25B683F5-944E-4788-B852-1B3106096CED}' />
    </window>
    <window class='worksheet' name='Monthwise total death'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1o66dbp1u000re1ban7pp0bwv742].[none:continent:nk]</field>
            <field>[federated.1o66dbp1u000re1ban7pp0bwv742].[none:location:nk]</field>
            <field>[federated.1o66dbp1u000re1ban7pp0bwv742].[tmn:date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{948CF11D-16E3-430B-8099-82517FE94FF7}' />
    </window>
    <window class='worksheet' name='Monthwise new cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1o66dbp1u000re1ban7pp0bwv742].[none:continent:nk]</field>
            <field>[federated.1o66dbp1u000re1ban7pp0bwv742].[none:location:nk]</field>
            <field>[federated.1o66dbp1u000re1ban7pp0bwv742].[none:new_cases:qk]</field>
            <field>[federated.1o66dbp1u000re1ban7pp0bwv742].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0DF19984-0FEE-41D3-97C2-07F62872A1E2}' />
    </window>
    <window class='worksheet' name='Month wise vaccination '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1o66dbp1u000re1ban7pp0bwv742].[none:continent:nk]</field>
            <field>[federated.1o66dbp1u000re1ban7pp0bwv742].[none:location:nk]</field>
            <field>[federated.1o66dbp1u000re1ban7pp0bwv742].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FDFE7BEB-6A35-47C2-BEB9-309AC83946AC}' />
    </window>
    <window class='worksheet' name='Total Cases in asia'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1o66dbp1u000re1ban7pp0bwv742].[none:continent:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1o66dbp1u000re1ban7pp0bwv742].[:Measure Names]</field>
            <field>[federated.1o66dbp1u000re1ban7pp0bwv742].[none:continent:nk]</field>
            <field>[federated.1o66dbp1u000re1ban7pp0bwv742].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0E573492-DA88-46BA-ABCD-B67E337105C9}' />
    </window>
    <window class='worksheet' name='Total Death in asia'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1o66dbp1u000re1ban7pp0bwv742].[none:continent:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1o66dbp1u000re1ban7pp0bwv742].[none:continent:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4BF74CC3-3074-4F35-AD02-F3A5C159CE16}' />
    </window>
    <window class='dashboard' maximized='true' name='Covid Analysis Dashboard'>
      <viewpoints>
        <viewpoint name='Chart showing various details of different countries' />
        <viewpoint name='Covid Patients with Other Cronical Diseases'>
          <highlight field='[federated.1o66dbp1u000re1ban7pp0bwv742].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Monthwise total cases'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Monthwise total death' />
        <viewpoint name='Total Cases in asia' />
        <viewpoint name='Total Covid cases per country in Asia'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Total Death in asia' />
      </viewpoints>
      <active id='16' />
      <simple-id uuid='{B9003642-EDDB-4BBF-9228-BED0CA6DB618}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Chart showing various details of different countries' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Covid Analysis Dashboard' width='192'>
      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
      C01NAGq80Pz/BK+9FQHYVUkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='159' name='Covid Patients with Other Cronical Diseases' width='192'>
      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
      T/rIYbyGAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Month wise vaccination ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Monthly positive rate' width='192'>
      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
      aiIAQlL7/8Nrb+Wn81uNAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Monthwise new cases' width='192'>
      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
      /weLyFoxAD1/XAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Monthwise total cases' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Monthwise total death' width='192'>
      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
    </thumbnail>
    <thumbnail height='44' name='Total Cases in asia' width='184'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Covid cases per country in Asia' width='192'>
      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
      cpjn/+j30NJzDD34ND279iPaXUx+dJo7nnyWoF2kVikjO+wsLSxg2tx0xUOklxbQZS9dsdAN
      FwZpmtbKsG9UFDU+fpXJM8eIXvgWby+58Agmsd27efBX/mdC4ch1F1Nhfn7etBSat0IhUBSF
      Wq22jtf/cbCWJZpOp1tKDqt+bIfKsbWvWUk1yynuVCxxI7DyEVbvZOs7vV7vpnbqzyras+S3
      G9l0im/95R8weOcjHDq0H5fDTqOSY3Q6y6Ejd2BWMszlGkyPXaTv2H9ksiqRy+bpDUgo4SHs
      D36FoQNHSATdgMHY+bM03El2betG0GqMTC1jsyjOW+XPWEmnzdDuGIfD4XUREk3T0DSN5eVl
      ZFlG13X8fn8r9q6qKuVyuSNfqFPWun2Qu1yuFuN0bcPvrUwCVVUpFAoIQlMP3+fzrTqPaTZF
      gW8Vo/WnDZ/U4AdoVCpMXjzGNuM8V2d6kUSZl05Nc9djz/KDkkm/u8rIXJbdg0lMScZXnGVW
      FRDwIIyd5o2Sg8vTaX79lz9PafQMp+dKOIpX8QafpTp6jP/86mVsDoeD7du3U6lUWrHRzWA1
      x9A0rWPoT1EUVFUlHo+3/ApL/lwURXK5XItq3NfXt+EgsmTULfKZIAjE4/F1Hr01qK3J4/V6
      W+HbUqnU6mFm7QbteQhFUXA6nZimSb1ep1KpbFqwD01zqj0K9NOKjZ7fTxLqopeafYgz06N8
      ud+NX9AY8eax13Oo4hxHHv8smVdf5eAdh3nx1R70/AhLFQFRlBA0gcfDOtNCGU03cYYDLL/0
      Lko2i2d4B7WskyM74tisDKu1E1Sr1euulBYdOhQKtV6zyG21Wq2V3GrvFGOJVK2tPdjsO9p3
      pnq9TiqVWuckK4rSklLp7e1FEAR8Ph9dXV2Uy2UqlQpLS0utTLYgCK0QrizLlEolKpUK4XAY
      j8ezpfzF7WJEfpK4HXSGWw23qPPEl/45jbEXODZ5lU9tE9FrNYS5d7gk23nu2mImiiL+vp1o
      4+9ytC/M5OQSiiBxpWpgKk1RLDnYzz/5jX/OOy98A2n5KhcvLTB68SxCuVw22x1fa+XdDKZp
      kslk8Pv9rQosURRbA7G7u/uWb5Wm2SzWnpmZIRaLUalUWjLrlsNeKBRau4TX62057IZhtFo1
      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
    </thumbnail>
    <thumbnail height='44' name='Total Death in asia' width='184'>
      iVBORw0KGgoAAAANSUhEUgAAALgAAAAsCAYAAADWxHKSAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAGd0lEQVR4nO3cf0yTdx4H8De10SnOQ5Pxx/6wxlMTz50xPg/QKoGTP7yyOc1iti5BTeYR
      iLpM0FzZhDEumXaGdHPLLfySPzQ6E43OuWRHaGlq70p6+tjMJlphwWDVea3GQldoS+nz2R9s
      lVKGsOrMPfu8kv7zfJ/n87yh7zx5njZpFhERGFMo1bMOwNjTxAVnisYFZ4rGBWeKxgVnisYF
      Z4rGBWeKxgVnisYFZ4rGBWeKxgVnisYFZ4rGBWeKxgVnisYFZ4rGBWeKxgVnisYFZ4rGBWeK
      xgVnisYFZ4rGBWeKxgVnisYFZ4rGBWeKxgVnisYFZ4qmftwOkiT9FjkYeyqy+Mc3mZLxLQpT
      NC44UzQuOFM0LjhTtMwLHj6Pt0URorgTXwSeQCL2WLIsQ5Ik7N+/H7t27cLQ0FDKWm9vLxoa
      GmAwGBAI/PKbEo1G0dbWhpKSEuTn58NgMKC3tzc558KFCygtLYUoinA6nZPOCIVCMBqN0Ol0
      KCoqwtGjRzEyMpJcDwQCqK6uRn5+PtavX4/m5uZJ58TjcVitVlRWVqKuri7t7x2fZdOmTSl5
      hoeHcfDgQeh0Ouh0OjQ0NCAWiwF4AgUPW61waStQsdqD7u7wNI64idY3RLzRejPTU/9u2e12
      nDt3DuXl5Vi+fHnK2vXr19HU1ASDwYCCgoIp55w5cwaRSARnz56Fy+VCZWUl2traEIvF4HA4
      IEkS2tvbcenSJZw8eRIPHz5MOV6WZTQ3N2Pt2rVwOBzo6OiA3+9HR0cHACASieDQoUMoKCiA
      0+mEzWaDXq+fNMupU6fgdrtRXV2NRYsWpaxNzGIymZJ5ZFnGkSNHMG/ePHR1dcHhcGDnzp2Y
      NWvW2MGUkThZagrorZN+6mt5nQpqLBTPbCCbgXA4TGazmcLh8KTrZrOZ/H7/Lx4fj6e+W6FQ
      iBobGykcDlMikaBEIpFca2xsTJsVDofp8OHDNDg4mNx27949MplMFI/HSZIkqq2tTTvPVPx+
      P5nN5pRtE7MkEolknlu3blFVVVVKhvEyu4KP/hdO14sQxVwsXb0az9mtsI/+vDgA50dvolgr
      QhS1KN5yAN8EgJ+v4O9af9rtWjO2/bUYWlGEqC3GlpqvcS+jUGy61OpH3/PJsozOzk7k5uYi
      OzsbKpUKKtWjeqhUqrQr65w5cxAMBmG32yHLMmRZRigUwuDgIIaGhtDT04PCwsKU8/waE7N0
      d3cn8/h8PqxcuRILFiyY/NhMTuz57CD+pd2NihUAtFWoEq34+DPP2GL43zh9/jaef2kDtu81
      4dOWD/BybvqM0T8swR9fUGMWAIwO4W7XP/CpNX0/9nT09/fDaDSiv78fW7duxY4dO5JrAwMD
      qKurg8vlwr59+9KKqlarYTKZsHnz5mQJc3JykJWVBbVajZGREQwMDCSfEXw+H3bv3o0bN27M
      OOf4LIWFhck80WgU0Wg0efsUDAZhNBpx8eJFABkV3AOrNYBR67tjV1/xL/jQBQSsVngAYP6r
      MHcdQ23pcgxfasHerVvwkWt0wowATtfXwZv/CTpdEiTpNCqW/vpEbGYePHiA48eP48CBA1i6
      NPUfH4lE0NTUhPLycmi12mnP9Hq9mD9/PubOnYtly5ZBlmVkZ2cDABYvXow1a9bgzp07M8o5
      VRaNRgMAyMnJAQAsXLgQGzduRE9PD4BMCn7TBVdAizq7BEn66XXhHfwp4ILrJoBrVpz/bi5W
      b6nAe5/8E7v+/ACe699PGBJFNAosyn0Rc9Qx/O9bBzz8Scxvxmazobi4OFmO8a5cuQKNRoMl
      S5ZMOeP27du4f/8+gLFyt7a2Jq/oq1atwuXLl+F2uyHLMnw+H7xeL1asWDGjnFNl0Wg0CAQC
      6OzshCzLCAaDsNlsEARhbIdp3/1PcPfYdhL2fEk/pG6lY9sF2n7sLlHfV/T3shJaJwgkCOuo
      pMxE/wkSEfVRy+sC1VjGjgha6umVdQIJ616hv5k+p/dfe7TGJtfS0kKCIKS8ioqK6OrVq2Sx
      WNLWBEEgi8VCw8PDtGfPHnI6nUREVFtbm7ZfaWkp+f1+am9vn3T+xBlut5v0ej0JgkB6vZ5s
      NltK1r6+Ptq2bRvl5eWlrE+cU1NTM+0s4/MQjT2YVlVVUV5eHm3YsIFOnDiRfCjN8FMU9v/E
      6/VSfX09xWKxZzrjSc55HP4m83fE4/GgrKwMs2fPfqYznuScx/kRtTHpg8Az/EMAAAAASUVO
      RK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
