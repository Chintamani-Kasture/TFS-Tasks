<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20204.21.0511.0936                               -->
<workbook original-version='18.1' source-build='2020.4.5 (20204.21.0511.0936)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style-theme name='modern' />
  <style>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-style' value='as-phased' />
      <format attr='animation-on' value='ao-off' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource caption='SampleSuperstore' inline='true' name='federated.0qrxox00bz0b2f1ffvij10g48be1' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='SampleSuperstore' name='textscan.1y3q0o00boza4q1e1ra3v07mnl1e'>
            <connection class='textscan' directory='C:/Users/HP/Jyupter_notebooks/TFS internship' filename='SampleSuperstore.csv' password='' port='0' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1y3q0o00boza4q1e1ra3v07mnl1e' name='SampleSuperstore.csv' table='[SampleSuperstore#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Ship Mode' ordinal='0' />
            <column datatype='string' name='Segment' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='string' name='State' ordinal='4' />
            <column datatype='integer' name='Postal Code' ordinal='5' />
            <column datatype='string' name='Region' ordinal='6' />
            <column datatype='string' name='Category' ordinal='7' />
            <column datatype='string' name='Sub-Category' ordinal='8' />
            <column datatype='real' name='Sales' ordinal='9' />
            <column datatype='integer' name='Quantity' ordinal='10' />
            <column datatype='real' name='Discount' ordinal='11' />
            <column datatype='real' name='Profit' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1y3q0o00boza4q1e1ra3v07mnl1e' name='SampleSuperstore.csv' table='[SampleSuperstore#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Ship Mode' ordinal='0' />
            <column datatype='string' name='Segment' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='string' name='State' ordinal='4' />
            <column datatype='integer' name='Postal Code' ordinal='5' />
            <column datatype='string' name='Region' ordinal='6' />
            <column datatype='string' name='Category' ordinal='7' />
            <column datatype='string' name='Sub-Category' ordinal='8' />
            <column datatype='real' name='Sales' ordinal='9' />
            <column datatype='integer' name='Quantity' ordinal='10' />
            <column datatype='real' name='Discount' ordinal='11' />
            <column datatype='real' name='Profit' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_95D2C6DFB8174908B0C6BA3E8907D432]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_95D2C6DFB8174908B0C6BA3E8907D432]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_95D2C6DFB8174908B0C6BA3E8907D432]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_95D2C6DFB8174908B0C6BA3E8907D432]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_95D2C6DFB8174908B0C6BA3E8907D432]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_95D2C6DFB8174908B0C6BA3E8907D432]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_95D2C6DFB8174908B0C6BA3E8907D432]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_95D2C6DFB8174908B0C6BA3E8907D432]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_95D2C6DFB8174908B0C6BA3E8907D432]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_95D2C6DFB8174908B0C6BA3E8907D432]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_95D2C6DFB8174908B0C6BA3E8907D432]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_95D2C6DFB8174908B0C6BA3E8907D432]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_95D2C6DFB8174908B0C6BA3E8907D432]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
      <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='SampleSuperstore.csv' datatype='table' name='[__tableau_internal_object_id__].[SampleSuperstore.csv_95D2C6DFB8174908B0C6BA3E8907D432]' role='measure' type='quantitative' />
      <column-instance column='[Profit]' derivation='Max' name='[max:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Min' name='[min:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
      <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Inclusions (Country,State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Country:nk]' />
          <groupfilter function='level-members' level='[none:State:nk]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0qrxox00bz0b2f1ffvij10g48be1].[max:Profit:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0qrxox00bz0b2f1ffvij10g48be1].[min:Profit:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0qrxox00bz0b2f1ffvij10g48be1].[sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0qrxox00bz0b2f1ffvij10g48be1]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0qrxox00bz0b2f1ffvij10g48be1].[sum:Sales:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Segment:nk]' palette='red_10_0' type='palette'>
            <map to='#ae123a'>
              <bucket>&quot;Home Office&quot;</bucket>
            </map>
            <map to='#f26250'>
              <bucket>&quot;Corporate&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;Consumer&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Sub-Category:nk]' palette='red_10_0' type='palette'>
            <map to='#ae123a'>
              <bucket>&quot;Tables&quot;</bucket>
            </map>
            <map to='#b9173a'>
              <bucket>&quot;Supplies&quot;</bucket>
            </map>
            <map to='#c51d3b'>
              <bucket>&quot;Storage&quot;</bucket>
            </map>
            <map to='#cf263c'>
              <bucket>&quot;Phones&quot;</bucket>
            </map>
            <map to='#d9303f'>
              <bucket>&quot;Paper&quot;</bucket>
            </map>
            <map to='#e13a41'>
              <bucket>&quot;Machines&quot;</bucket>
            </map>
            <map to='#e84746'>
              <bucket>&quot;Labels&quot;</bucket>
            </map>
            <map to='#ed544b'>
              <bucket>&quot;Furnishings&quot;</bucket>
            </map>
            <map to='#f26250'>
              <bucket>&quot;Fasteners&quot;</bucket>
            </map>
            <map to='#f46d5a'>
              <bucket>&quot;Envelopes&quot;</bucket>
            </map>
            <map to='#f77a65'>
              <bucket>&quot;Copiers&quot;</bucket>
            </map>
            <map to='#f9866f'>
              <bucket>&quot;Chairs&quot;</bucket>
            </map>
            <map to='#fb927c'>
              <bucket>&quot;Bookcases&quot;</bucket>
            </map>
            <map to='#fc9d89'>
              <bucket>&quot;Binders&quot;</bucket>
            </map>
            <map to='#fda797'>
              <bucket>&quot;Art&quot;</bucket>
            </map>
            <map to='#feb2a4'>
              <bucket>&quot;Appliances&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;Accessories&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:State:nk]' palette='red_10_0' type='palette'>
            <map to='#ae123a'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#b1133a'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#b5153a'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#b9173a'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#bd183a'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#c11a3b'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#c51d3b'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#c8203b'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#cc233c'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#cf263c'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#d3293d'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#d62c3e'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#d9303f'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#db333f'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#de3640'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#e13a41'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#e33e43'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#e54244'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#e84746'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#ea4b47'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#ec4f49'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#ed544b'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#ef584c'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#f05d4e'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#f26250'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#f26553'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#f36957'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#f46d5a'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#f5715e'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#f67561'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#f77a65'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#f77e68'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#f8826b'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#f9866f'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#fa8a72'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#fa8e77'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#fb927c'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#fb9580'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#fb9985'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#fc9d89'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#fca08e'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#fda492'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#fda797'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#fdab9c'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#feafa0'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#feb2a4'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#feb6a9'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#febaad'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:City:nk]' palette='red_10_0' type='palette'>
            <map to='#ae123a'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#af123a'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#af123a'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#af123a'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#b0123a'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#b0133a'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#b0133a'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#b1133a'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#b1133a'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#b1133a'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#b2133a'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#b2133a'>
              <bucket>&quot;Round Rock&quot;</bucket>
            </map>
            <map to='#b3143a'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#b3143a'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#b3143a'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#b4143a'>
              <bucket>&quot;Bethlehem&quot;</bucket>
            </map>
            <map to='#b4143a'>
              <bucket>&quot;Clarksville&quot;</bucket>
            </map>
            <map to='#b4143a'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#b5153a'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#b5153a'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#b5153a'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#b6153a'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#b6153a'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#b6153a'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#b7153a'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#b7163a'>
              <bucket>&quot;Troy&quot;</bucket>
            </map>
            <map to='#b8163a'>
              <bucket>&quot;Carrollton&quot;</bucket>
            </map>
            <map to='#b8163a'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#b8163a'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
            <map to='#b9163a'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#b9163a'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#b9163a'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#ba173a'>
              <bucket>&quot;Amarillo&quot;</bucket>
            </map>
            <map to='#ba173a'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#ba173a'>
              <bucket>&quot;Plano&quot;</bucket>
            </map>
            <map to='#bb173a'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#bb173a'>
              <bucket>&quot;Skokie&quot;</bucket>
            </map>
            <map to='#bb173a'>
              <bucket>&quot;Tamarac&quot;</bucket>
            </map>
            <map to='#bc183a'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#bc183a'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#bd183a'>
              <bucket>&quot;Bloomington&quot;</bucket>
            </map>
            <map to='#bd183a'>
              <bucket>&quot;Fort Collins&quot;</bucket>
            </map>
            <map to='#bd183a'>
              <bucket>&quot;Reading&quot;</bucket>
            </map>
            <map to='#be183a'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#be183a'>
              <bucket>&quot;Park Ridge&quot;</bucket>
            </map>
            <map to='#be193a'>
              <bucket>&quot;Pharr&quot;</bucket>
            </map>
            <map to='#bf193a'>
              <bucket>&quot;Allentown&quot;</bucket>
            </map>
            <map to='#bf193a'>
              <bucket>&quot;Des Plaines&quot;</bucket>
            </map>
            <map to='#bf193a'>
              <bucket>&quot;Tigard&quot;</bucket>
            </map>
            <map to='#c0193a'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#c0193a'>
              <bucket>&quot;Elmhurst&quot;</bucket>
            </map>
            <map to='#c11a3b'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#c11a3b'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#c11a3b'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#c11a3b'>
              <bucket>&quot;Lakeland&quot;</bucket>
            </map>
            <map to='#c21b3b'>
              <bucket>&quot;Hialeah&quot;</bucket>
            </map>
            <map to='#c21b3b'>
              <bucket>&quot;Highland Park&quot;</bucket>
            </map>
            <map to='#c21b3b'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#c31b3b'>
              <bucket>&quot;Mcallen&quot;</bucket>
            </map>
            <map to='#c31c3b'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#c31c3b'>
              <bucket>&quot;Redmond&quot;</bucket>
            </map>
            <map to='#c41c3b'>
              <bucket>&quot;Naperville&quot;</bucket>
            </map>
            <map to='#c41c3b'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#c41d3b'>
              <bucket>&quot;Mentor&quot;</bucket>
            </map>
            <map to='#c51d3b'>
              <bucket>&quot;College Station&quot;</bucket>
            </map>
            <map to='#c51d3b'>
              <bucket>&quot;Greensboro&quot;</bucket>
            </map>
            <map to='#c51d3b'>
              <bucket>&quot;Normal&quot;</bucket>
            </map>
            <map to='#c61e3b'>
              <bucket>&quot;Irving&quot;</bucket>
            </map>
            <map to='#c61e3b'>
              <bucket>&quot;Wheeling&quot;</bucket>
            </map>
            <map to='#c61e3b'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#c71f3b'>
              <bucket>&quot;Buffalo Grove&quot;</bucket>
            </map>
            <map to='#c71f3b'>
              <bucket>&quot;Littleton&quot;</bucket>
            </map>
            <map to='#c71f3b'>
              <bucket>&quot;Scottsdale&quot;</bucket>
            </map>
            <map to='#c81f3b'>
              <bucket>&quot;Mesquite&quot;</bucket>
            </map>
            <map to='#c8203b'>
              <bucket>&quot;Grand Prairie&quot;</bucket>
            </map>
            <map to='#c8203b'>
              <bucket>&quot;Pembroke Pines&quot;</bucket>
            </map>
            <map to='#c9203b'>
              <bucket>&quot;Mansfield&quot;</bucket>
            </map>
            <map to='#c9203b'>
              <bucket>&quot;Odessa&quot;</bucket>
            </map>
            <map to='#c9213c'>
              <bucket>&quot;San Angelo&quot;</bucket>
            </map>
            <map to='#c9213c'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#ca213c'>
              <bucket>&quot;Daytona Beach&quot;</bucket>
            </map>
            <map to='#ca213c'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#ca223c'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#cb223c'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#cb223c'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#cb223c'>
              <bucket>&quot;Hendersonville&quot;</bucket>
            </map>
            <map to='#cc233c'>
              <bucket>&quot;Carol Stream&quot;</bucket>
            </map>
            <map to='#cc233c'>
              <bucket>&quot;Commerce City&quot;</bucket>
            </map>
            <map to='#cc233c'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#cd243c'>
              <bucket>&quot;Frankfort&quot;</bucket>
            </map>
            <map to='#cd243c'>
              <bucket>&quot;League City&quot;</bucket>
            </map>
            <map to='#cd243c'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#ce243c'>
              <bucket>&quot;Boca Raton&quot;</bucket>
            </map>
            <map to='#ce253c'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#ce253c'>
              <bucket>&quot;Freeport&quot;</bucket>
            </map>
            <map to='#cf253c'>
              <bucket>&quot;Frisco&quot;</bucket>
            </map>
            <map to='#cf253c'>
              <bucket>&quot;San Marcos&quot;</bucket>
            </map>
            <map to='#cf263c'>
              <bucket>&quot;Romeoville&quot;</bucket>
            </map>
            <map to='#d0263c'>
              <bucket>&quot;Cuyahoga Falls&quot;</bucket>
            </map>
            <map to='#d0263c'>
              <bucket>&quot;Gastonia&quot;</bucket>
            </map>
            <map to='#d0263c'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#d1273c'>
              <bucket>&quot;Deer Park&quot;</bucket>
            </map>
            <map to='#d1273c'>
              <bucket>&quot;Missouri City&quot;</bucket>
            </map>
            <map to='#d1273c'>
              <bucket>&quot;Sanford&quot;</bucket>
            </map>
            <map to='#d2283d'>
              <bucket>&quot;Bolingbrook&quot;</bucket>
            </map>
            <map to='#d2283d'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#d2283d'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#d2283d'>
              <bucket>&quot;Tinley Park&quot;</bucket>
            </map>
            <map to='#d3293d'>
              <bucket>&quot;Abilene&quot;</bucket>
            </map>
            <map to='#d3293d'>
              <bucket>&quot;Ormond Beach&quot;</bucket>
            </map>
            <map to='#d3293d'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#d32a3d'>
              <bucket>&quot;Elyria&quot;</bucket>
            </map>
            <map to='#d42a3d'>
              <bucket>&quot;Altoona&quot;</bucket>
            </map>
            <map to='#d42a3d'>
              <bucket>&quot;Hickory&quot;</bucket>
            </map>
            <map to='#d42b3d'>
              <bucket>&quot;Jupiter&quot;</bucket>
            </map>
            <map to='#d42b3d'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#d52b3d'>
              <bucket>&quot;Arlington Heights&quot;</bucket>
            </map>
            <map to='#d52b3d'>
              <bucket>&quot;Springdale&quot;</bucket>
            </map>
            <map to='#d52c3e'>
              <bucket>&quot;Hillsboro&quot;</bucket>
            </map>
            <map to='#d52c3e'>
              <bucket>&quot;Keller&quot;</bucket>
            </map>
            <map to='#d62c3e'>
              <bucket>&quot;Layton&quot;</bucket>
            </map>
            <map to='#d62d3e'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#d62d3e'>
              <bucket>&quot;Margate&quot;</bucket>
            </map>
            <map to='#d72d3e'>
              <bucket>&quot;Port Orange&quot;</bucket>
            </map>
            <map to='#d72e3e'>
              <bucket>&quot;Goldsboro&quot;</bucket>
            </map>
            <map to='#d72e3e'>
              <bucket>&quot;Marysville&quot;</bucket>
            </map>
            <map to='#d72e3e'>
              <bucket>&quot;North Miami&quot;</bucket>
            </map>
            <map to='#d82e3e'>
              <bucket>&quot;Bridgeton&quot;</bucket>
            </map>
            <map to='#d82f3e'>
              <bucket>&quot;Baytown&quot;</bucket>
            </map>
            <map to='#d82f3e'>
              <bucket>&quot;Montebello&quot;</bucket>
            </map>
            <map to='#d82f3e'>
              <bucket>&quot;Rock Hill&quot;</bucket>
            </map>
            <map to='#d9303f'>
              <bucket>&quot;Iowa City&quot;</bucket>
            </map>
            <map to='#d9303f'>
              <bucket>&quot;Loveland&quot;</bucket>
            </map>
            <map to='#d9303f'>
              <bucket>&quot;Port Saint Lucie&quot;</bucket>
            </map>
            <map to='#d9313f'>
              <bucket>&quot;Chapel Hill&quot;</bucket>
            </map>
            <map to='#da313f'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#da313f'>
              <bucket>&quot;Bullhead City&quot;</bucket>
            </map>
            <map to='#da313f'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#da323f'>
              <bucket>&quot;Conroe&quot;</bucket>
            </map>
            <map to='#db323f'>
              <bucket>&quot;Morgan Hill&quot;</bucket>
            </map>
            <map to='#db323f'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
            <map to='#db333f'>
              <bucket>&quot;Grand Island&quot;</bucket>
            </map>
            <map to='#dc333f'>
              <bucket>&quot;Jefferson City&quot;</bucket>
            </map>
            <map to='#dc333f'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#dc3440'>
              <bucket>&quot;Antioch&quot;</bucket>
            </map>
            <map to='#dc3440'>
              <bucket>&quot;Grapevine&quot;</bucket>
            </map>
            <map to='#dd3440'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#dd3440'>
              <bucket>&quot;North Charleston&quot;</bucket>
            </map>
            <map to='#dd3540'>
              <bucket>&quot;Danbury&quot;</bucket>
            </map>
            <map to='#dd3540'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#de3540'>
              <bucket>&quot;Bartlett&quot;</bucket>
            </map>
            <map to='#de3640'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#de3640'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#de3640'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#df3740'>
              <bucket>&quot;Atlantic City&quot;</bucket>
            </map>
            <map to='#df3740'>
              <bucket>&quot;Clovis&quot;</bucket>
            </map>
            <map to='#df3740'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#e03841'>
              <bucket>&quot;Grove City&quot;</bucket>
            </map>
            <map to='#e03841'>
              <bucket>&quot;Johnson City&quot;</bucket>
            </map>
            <map to='#e03841'>
              <bucket>&quot;Plantation&quot;</bucket>
            </map>
            <map to='#e03941'>
              <bucket>&quot;Nashua&quot;</bucket>
            </map>
            <map to='#e03941'>
              <bucket>&quot;Yucaipa&quot;</bucket>
            </map>
            <map to='#e13941'>
              <bucket>&quot;Englewood&quot;</bucket>
            </map>
            <map to='#e13a41'>
              <bucket>&quot;Glenview&quot;</bucket>
            </map>
            <map to='#e13a41'>
              <bucket>&quot;Redwood City&quot;</bucket>
            </map>
            <map to='#e13b42'>
              <bucket>&quot;Pompano Beach&quot;</bucket>
            </map>
            <map to='#e13b42'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#e23b42'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#e23c42'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#e23c42'>
              <bucket>&quot;Murfreesboro&quot;</bucket>
            </map>
            <map to='#e23c42'>
              <bucket>&quot;Sierra Vista&quot;</bucket>
            </map>
            <map to='#e23d42'>
              <bucket>&quot;Royal Oak&quot;</bucket>
            </map>
            <map to='#e33d42'>
              <bucket>&quot;Palm Coast&quot;</bucket>
            </map>
            <map to='#e33e43'>
              <bucket>&quot;Harlingen&quot;</bucket>
            </map>
            <map to='#e33e43'>
              <bucket>&quot;La Quinta&quot;</bucket>
            </map>
            <map to='#e33e43'>
              <bucket>&quot;Lake Elsinore&quot;</bucket>
            </map>
            <map to='#e33f43'>
              <bucket>&quot;Coral Springs&quot;</bucket>
            </map>
            <map to='#e43f43'>
              <bucket>&quot;Hoover&quot;</bucket>
            </map>
            <map to='#e43f43'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#e44043'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#e44044'>
              <bucket>&quot;Kenner&quot;</bucket>
            </map>
            <map to='#e44144'>
              <bucket>&quot;Modesto&quot;</bucket>
            </map>
            <map to='#e54144'>
              <bucket>&quot;Hagerstown&quot;</bucket>
            </map>
            <map to='#e54144'>
              <bucket>&quot;Texas City&quot;</bucket>
            </map>
            <map to='#e54244'>
              <bucket>&quot;Bozeman&quot;</bucket>
            </map>
            <map to='#e54244'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#e64244'>
              <bucket>&quot;Shelton&quot;</bucket>
            </map>
            <map to='#e64344'>
              <bucket>&quot;Homestead&quot;</bucket>
            </map>
            <map to='#e64345'>
              <bucket>&quot;Coral Gables&quot;</bucket>
            </map>
            <map to='#e64445'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#e64445'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#e74445'>
              <bucket>&quot;Palatine&quot;</bucket>
            </map>
            <map to='#e74545'>
              <bucket>&quot;Lindenhurst&quot;</bucket>
            </map>
            <map to='#e74545'>
              <bucket>&quot;Redding&quot;</bucket>
            </map>
            <map to='#e74545'>
              <bucket>&quot;Saint Paul&quot;</bucket>
            </map>
            <map to='#e74646'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#e84646'>
              <bucket>&quot;Owensboro&quot;</bucket>
            </map>
            <map to='#e84746'>
              <bucket>&quot;Edinburg&quot;</bucket>
            </map>
            <map to='#e84746'>
              <bucket>&quot;Escondido&quot;</bucket>
            </map>
            <map to='#e84746'>
              <bucket>&quot;West Allis&quot;</bucket>
            </map>
            <map to='#e84846'>
              <bucket>&quot;Delray Beach&quot;</bucket>
            </map>
            <map to='#e94846'>
              <bucket>&quot;Parma&quot;</bucket>
            </map>
            <map to='#e94846'>
              <bucket>&quot;Santa Maria&quot;</bucket>
            </map>
            <map to='#e94947'>
              <bucket>&quot;Malden&quot;</bucket>
            </map>
            <map to='#e94947'>
              <bucket>&quot;West Palm Beach&quot;</bucket>
            </map>
            <map to='#e94a47'>
              <bucket>&quot;The Colony&quot;</bucket>
            </map>
            <map to='#ea4a47'>
              <bucket>&quot;Miramar&quot;</bucket>
            </map>
            <map to='#ea4a47'>
              <bucket>&quot;Sterling Heights&quot;</bucket>
            </map>
            <map to='#ea4b47'>
              <bucket>&quot;Thomasville&quot;</bucket>
            </map>
            <map to='#ea4b47'>
              <bucket>&quot;Woodland&quot;</bucket>
            </map>
            <map to='#eb4c48'>
              <bucket>&quot;Longmont&quot;</bucket>
            </map>
            <map to='#eb4c48'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#eb4c48'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#eb4d48'>
              <bucket>&quot;Bellevue&quot;</bucket>
            </map>
            <map to='#eb4d48'>
              <bucket>&quot;Lewiston&quot;</bucket>
            </map>
            <map to='#eb4e48'>
              <bucket>&quot;Longview&quot;</bucket>
            </map>
            <map to='#eb4e48'>
              <bucket>&quot;Pearland&quot;</bucket>
            </map>
            <map to='#eb4e49'>
              <bucket>&quot;Coppell&quot;</bucket>
            </map>
            <map to='#ec4f49'>
              <bucket>&quot;Laguna Niguel&quot;</bucket>
            </map>
            <map to='#ec4f49'>
              <bucket>&quot;San Clemente&quot;</bucket>
            </map>
            <map to='#ec5049'>
              <bucket>&quot;Cedar Hill&quot;</bucket>
            </map>
            <map to='#ec5049'>
              <bucket>&quot;Las Cruces&quot;</bucket>
            </map>
            <map to='#ec5049'>
              <bucket>&quot;Whittier&quot;</bucket>
            </map>
            <map to='#ec5149'>
              <bucket>&quot;Lodi&quot;</bucket>
            </map>
            <map to='#ec514a'>
              <bucket>&quot;Rapid City&quot;</bucket>
            </map>
            <map to='#ec524a'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#ed524a'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#ed534a'>
              <bucket>&quot;Kirkwood&quot;</bucket>
            </map>
            <map to='#ed534a'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#ed534a'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#ed544b'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#ed544b'>
              <bucket>&quot;Coachella&quot;</bucket>
            </map>
            <map to='#ed554b'>
              <bucket>&quot;Linden&quot;</bucket>
            </map>
            <map to='#ee554b'>
              <bucket>&quot;Boynton Beach&quot;</bucket>
            </map>
            <map to='#ee554b'>
              <bucket>&quot;New Bedford&quot;</bucket>
            </map>
            <map to='#ee564b'>
              <bucket>&quot;Haltom City&quot;</bucket>
            </map>
            <map to='#ee564b'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#ee574c'>
              <bucket>&quot;El Cajon&quot;</bucket>
            </map>
            <map to='#ee574c'>
              <bucket>&quot;Gladstone&quot;</bucket>
            </map>
            <map to='#ee584c'>
              <bucket>&quot;Cary&quot;</bucket>
            </map>
            <map to='#ee584c'>
              <bucket>&quot;Warner Robins&quot;</bucket>
            </map>
            <map to='#ef584c'>
              <bucket>&quot;Rochester Hills&quot;</bucket>
            </map>
            <map to='#ef594c'>
              <bucket>&quot;Apopka&quot;</bucket>
            </map>
            <map to='#ef594c'>
              <bucket>&quot;Citrus Heights&quot;</bucket>
            </map>
            <map to='#ef5a4d'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#ef5a4d'>
              <bucket>&quot;Cottage Grove&quot;</bucket>
            </map>
            <map to='#ef5a4d'>
              <bucket>&quot;Urbandale&quot;</bucket>
            </map>
            <map to='#ef5b4d'>
              <bucket>&quot;Beaumont&quot;</bucket>
            </map>
            <map to='#f05b4d'>
              <bucket>&quot;Niagara Falls&quot;</bucket>
            </map>
            <map to='#f05c4d'>
              <bucket>&quot;Arvada&quot;</bucket>
            </map>
            <map to='#f05c4e'>
              <bucket>&quot;Holyoke&quot;</bucket>
            </map>
            <map to='#f05d4e'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#f05d4e'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#f05d4e'>
              <bucket>&quot;Vineland&quot;</bucket>
            </map>
            <map to='#f05e4e'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#f05e4e'>
              <bucket>&quot;Pico Rivera&quot;</bucket>
            </map>
            <map to='#f15f4e'>
              <bucket>&quot;Holland&quot;</bucket>
            </map>
            <map to='#f15f4f'>
              <bucket>&quot;Marlborough&quot;</bucket>
            </map>
            <map to='#f15f4f'>
              <bucket>&quot;Orland Park&quot;</bucket>
            </map>
            <map to='#f1604f'>
              <bucket>&quot;Lincoln Park&quot;</bucket>
            </map>
            <map to='#f1604f'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#f1614f'>
              <bucket>&quot;Encinitas&quot;</bucket>
            </map>
            <map to='#f1614f'>
              <bucket>&quot;Pine Bluff&quot;</bucket>
            </map>
            <map to='#f26250'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#f26250'>
              <bucket>&quot;New Albany&quot;</bucket>
            </map>
            <map to='#f26250'>
              <bucket>&quot;Rancho Cucamonga&quot;</bucket>
            </map>
            <map to='#f26350'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
            <map to='#f26351'>
              <bucket>&quot;Avondale&quot;</bucket>
            </map>
            <map to='#f26351'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#f26451'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#f26452'>
              <bucket>&quot;Asheville&quot;</bucket>
            </map>
            <map to='#f26452'>
              <bucket>&quot;Gulfport&quot;</bucket>
            </map>
            <map to='#f26552'>
              <bucket>&quot;Woonsocket&quot;</bucket>
            </map>
            <map to='#f26553'>
              <bucket>&quot;Bayonne&quot;</bucket>
            </map>
            <map to='#f26553'>
              <bucket>&quot;Leominster&quot;</bucket>
            </map>
            <map to='#f26653'>
              <bucket>&quot;Woodstock&quot;</bucket>
            </map>
            <map to='#f26654'>
              <bucket>&quot;Cedar Rapids&quot;</bucket>
            </map>
            <map to='#f36754'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#f36754'>
              <bucket>&quot;Chandler&quot;</bucket>
            </map>
            <map to='#f36755'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#f36855'>
              <bucket>&quot;Eagan&quot;</bucket>
            </map>
            <map to='#f36855'>
              <bucket>&quot;Kissimmee&quot;</bucket>
            </map>
            <map to='#f36856'>
              <bucket>&quot;Visalia&quot;</bucket>
            </map>
            <map to='#f36956'>
              <bucket>&quot;Pasadena&quot;</bucket>
            </map>
            <map to='#f36956'>
              <bucket>&quot;Wausau&quot;</bucket>
            </map>
            <map to='#f36957'>
              <bucket>&quot;Garden City&quot;</bucket>
            </map>
            <map to='#f36a57'>
              <bucket>&quot;Draper&quot;</bucket>
            </map>
            <map to='#f36a57'>
              <bucket>&quot;Murrieta&quot;</bucket>
            </map>
            <map to='#f36a58'>
              <bucket>&quot;Mount Pleasant&quot;</bucket>
            </map>
            <map to='#f36b58'>
              <bucket>&quot;Meridian&quot;</bucket>
            </map>
            <map to='#f46b58'>
              <bucket>&quot;Tempe&quot;</bucket>
            </map>
            <map to='#f46c58'>
              <bucket>&quot;Mishawaka&quot;</bucket>
            </map>
            <map to='#f46c59'>
              <bucket>&quot;Hesperia&quot;</bucket>
            </map>
            <map to='#f46c59'>
              <bucket>&quot;Saint Louis&quot;</bucket>
            </map>
            <map to='#f46d59'>
              <bucket>&quot;Clifton&quot;</bucket>
            </map>
            <map to='#f46d5a'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#f46d5a'>
              <bucket>&quot;Thousand Oaks&quot;</bucket>
            </map>
            <map to='#f46e5a'>
              <bucket>&quot;Moorhead&quot;</bucket>
            </map>
            <map to='#f46e5b'>
              <bucket>&quot;East Point&quot;</bucket>
            </map>
            <map to='#f46e5b'>
              <bucket>&quot;Temecula&quot;</bucket>
            </map>
            <map to='#f46f5b'>
              <bucket>&quot;West Jordan&quot;</bucket>
            </map>
            <map to='#f46f5c'>
              <bucket>&quot;Gaithersburg&quot;</bucket>
            </map>
            <map to='#f46f5c'>
              <bucket>&quot;Port Arthur&quot;</bucket>
            </map>
            <map to='#f5705c'>
              <bucket>&quot;Sunnyvale&quot;</bucket>
            </map>
            <map to='#f5705d'>
              <bucket>&quot;Hollywood&quot;</bucket>
            </map>
            <map to='#f5715d'>
              <bucket>&quot;La Mesa&quot;</bucket>
            </map>
            <map to='#f5715d'>
              <bucket>&quot;Vacaville&quot;</bucket>
            </map>
            <map to='#f5715e'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#f5725e'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#f5725e'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#f5725f'>
              <bucket>&quot;Rio Rancho&quot;</bucket>
            </map>
            <map to='#f5735f'>
              <bucket>&quot;Andover&quot;</bucket>
            </map>
            <map to='#f5735f'>
              <bucket>&quot;Deltona&quot;</bucket>
            </map>
            <map to='#f57360'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#f57460'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#f57460'>
              <bucket>&quot;Rockville&quot;</bucket>
            </map>
            <map to='#f67561'>
              <bucket>&quot;Coon Rapids&quot;</bucket>
            </map>
            <map to='#f67561'>
              <bucket>&quot;Gilbert&quot;</bucket>
            </map>
            <map to='#f67561'>
              <bucket>&quot;Olympia&quot;</bucket>
            </map>
            <map to='#f67661'>
              <bucket>&quot;Thornton&quot;</bucket>
            </map>
            <map to='#f67662'>
              <bucket>&quot;Dearborn Heights&quot;</bucket>
            </map>
            <map to='#f67662'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#f67762'>
              <bucket>&quot;Saint Peters&quot;</bucket>
            </map>
            <map to='#f67763'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#f67863'>
              <bucket>&quot;Canton&quot;</bucket>
            </map>
            <map to='#f67863'>
              <bucket>&quot;Pomona&quot;</bucket>
            </map>
            <map to='#f67864'>
              <bucket>&quot;Gresham&quot;</bucket>
            </map>
            <map to='#f67964'>
              <bucket>&quot;Mission Viejo&quot;</bucket>
            </map>
            <map to='#f67964'>
              <bucket>&quot;Oak Park&quot;</bucket>
            </map>
            <map to='#f67964'>
              <bucket>&quot;Saint Petersburg&quot;</bucket>
            </map>
            <map to='#f77a65'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#f77a65'>
              <bucket>&quot;Westfield&quot;</bucket>
            </map>
            <map to='#f77b65'>
              <bucket>&quot;Rome&quot;</bucket>
            </map>
            <map to='#f77b66'>
              <bucket>&quot;Carlsbad&quot;</bucket>
            </map>
            <map to='#f77b66'>
              <bucket>&quot;Middletown&quot;</bucket>
            </map>
            <map to='#f77c66'>
              <bucket>&quot;Camarillo&quot;</bucket>
            </map>
            <map to='#f77c67'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#f77c67'>
              <bucket>&quot;Texarkana&quot;</bucket>
            </map>
            <map to='#f77d67'>
              <bucket>&quot;Farmington&quot;</bucket>
            </map>
            <map to='#f77d67'>
              <bucket>&quot;Norwich&quot;</bucket>
            </map>
            <map to='#f77e68'>
              <bucket>&quot;Cambridge&quot;</bucket>
            </map>
            <map to='#f77e68'>
              <bucket>&quot;Manteca&quot;</bucket>
            </map>
            <map to='#f77e68'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#f87f69'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#f87f69'>
              <bucket>&quot;East Orange&quot;</bucket>
            </map>
            <map to='#f87f69'>
              <bucket>&quot;Redondo Beach&quot;</bucket>
            </map>
            <map to='#f8806a'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#f8806a'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#f8816a'>
              <bucket>&quot;Glendale&quot;</bucket>
            </map>
            <map to='#f8816a'>
              <bucket>&quot;Renton&quot;</bucket>
            </map>
            <map to='#f8816b'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#f8826b'>
              <bucket>&quot;La Porte&quot;</bucket>
            </map>
            <map to='#f8826b'>
              <bucket>&quot;Utica&quot;</bucket>
            </map>
            <map to='#f8826c'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
            <map to='#f8836c'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#f8836c'>
              <bucket>&quot;Summerville&quot;</bucket>
            </map>
            <map to='#f9846d'>
              <bucket>&quot;Chico&quot;</bucket>
            </map>
            <map to='#f9846d'>
              <bucket>&quot;Olathe&quot;</bucket>
            </map>
            <map to='#f9846d'>
              <bucket>&quot;Overland Park&quot;</bucket>
            </map>
            <map to='#f9856d'>
              <bucket>&quot;Danville&quot;</bucket>
            </map>
            <map to='#f9856e'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#f9856e'>
              <bucket>&quot;Bowling Green&quot;</bucket>
            </map>
            <map to='#f9866e'>
              <bucket>&quot;Green Bay&quot;</bucket>
            </map>
            <map to='#f9866f'>
              <bucket>&quot;Sparks&quot;</bucket>
            </map>
            <map to='#f9876f'>
              <bucket>&quot;Ann Arbor&quot;</bucket>
            </map>
            <map to='#f9876f'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#f98770'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#f98870'>
              <bucket>&quot;Lake Charles&quot;</bucket>
            </map>
            <map to='#f98870'>
              <bucket>&quot;Lawton&quot;</bucket>
            </map>
            <map to='#fa8971'>
              <bucket>&quot;Chula Vista&quot;</bucket>
            </map>
            <map to='#fa8971'>
              <bucket>&quot;Edmond&quot;</bucket>
            </map>
            <map to='#fa8971'>
              <bucket>&quot;Revere&quot;</bucket>
            </map>
            <map to='#fa8a72'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#fa8a72'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#fa8a73'>
              <bucket>&quot;Salinas&quot;</bucket>
            </map>
            <map to='#fa8b73'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#fa8b73'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#fa8b74'>
              <bucket>&quot;South Bend&quot;</bucket>
            </map>
            <map to='#fa8c74'>
              <bucket>&quot;Belleville&quot;</bucket>
            </map>
            <map to='#fa8c75'>
              <bucket>&quot;Apple Valley&quot;</bucket>
            </map>
            <map to='#fa8c75'>
              <bucket>&quot;San Gabriel&quot;</bucket>
            </map>
            <map to='#fa8d75'>
              <bucket>&quot;Costa Mesa&quot;</bucket>
            </map>
            <map to='#fa8d76'>
              <bucket>&quot;Fort Worth&quot;</bucket>
            </map>
            <map to='#fa8d76'>
              <bucket>&quot;Saint Charles&quot;</bucket>
            </map>
            <map to='#fa8e77'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#fa8e77'>
              <bucket>&quot;Milford&quot;</bucket>
            </map>
            <map to='#fa8e78'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#fa8f78'>
              <bucket>&quot;Lake Forest&quot;</bucket>
            </map>
            <map to='#fa8f78'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#fa8f79'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#fa9079'>
              <bucket>&quot;Vallejo&quot;</bucket>
            </map>
            <map to='#fa907a'>
              <bucket>&quot;Bossier City&quot;</bucket>
            </map>
            <map to='#fa907a'>
              <bucket>&quot;Waterbury&quot;</bucket>
            </map>
            <map to='#fa917a'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
            <map to='#fa917b'>
              <bucket>&quot;Oxnard&quot;</bucket>
            </map>
            <map to='#fa917b'>
              <bucket>&quot;Sioux Falls&quot;</bucket>
            </map>
            <map to='#fb927c'>
              <bucket>&quot;Noblesville&quot;</bucket>
            </map>
            <map to='#fb927c'>
              <bucket>&quot;Quincy&quot;</bucket>
            </map>
            <map to='#fb927d'>
              <bucket>&quot;Moreno Valley&quot;</bucket>
            </map>
            <map to='#fb937d'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#fb937d'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#fb937e'>
              <bucket>&quot;New Rochelle&quot;</bucket>
            </map>
            <map to='#fb947e'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#fb947f'>
              <bucket>&quot;Maple Grove&quot;</bucket>
            </map>
            <map to='#fb947f'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#fb957f'>
              <bucket>&quot;Provo&quot;</bucket>
            </map>
            <map to='#fb9580'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#fb9580'>
              <bucket>&quot;Westland&quot;</bucket>
            </map>
            <map to='#fb9681'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#fb9681'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#fb9682'>
              <bucket>&quot;Evanston&quot;</bucket>
            </map>
            <map to='#fb9782'>
              <bucket>&quot;Lansing&quot;</bucket>
            </map>
            <map to='#fb9782'>
              <bucket>&quot;Southaven&quot;</bucket>
            </map>
            <map to='#fb9783'>
              <bucket>&quot;Bangor&quot;</bucket>
            </map>
            <map to='#fb9883'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#fb9884'>
              <bucket>&quot;Hackensack&quot;</bucket>
            </map>
            <map to='#fb9884'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#fb9984'>
              <bucket>&quot;Lehi&quot;</bucket>
            </map>
            <map to='#fb9985'>
              <bucket>&quot;Redlands&quot;</bucket>
            </map>
            <map to='#fb9985'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#fb9a86'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#fb9a86'>
              <bucket>&quot;Saint Cloud&quot;</bucket>
            </map>
            <map to='#fc9b87'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#fc9b87'>
              <bucket>&quot;Meriden&quot;</bucket>
            </map>
            <map to='#fc9b87'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#fc9b88'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#fc9c88'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#fc9c89'>
              <bucket>&quot;Marietta&quot;</bucket>
            </map>
            <map to='#fc9c89'>
              <bucket>&quot;Superior&quot;</bucket>
            </map>
            <map to='#fc9d89'>
              <bucket>&quot;Orem&quot;</bucket>
            </map>
            <map to='#fc9d8a'>
              <bucket>&quot;Sandy Springs&quot;</bucket>
            </map>
            <map to='#fc9d8a'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#fc9e8b'>
              <bucket>&quot;Appleton&quot;</bucket>
            </map>
            <map to='#fc9e8b'>
              <bucket>&quot;Broken Arrow&quot;</bucket>
            </map>
            <map to='#fc9e8b'>
              <bucket>&quot;Pleasant Grove&quot;</bucket>
            </map>
            <map to='#fc9f8c'>
              <bucket>&quot;Hattiesburg&quot;</bucket>
            </map>
            <map to='#fc9f8c'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#fc9f8d'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#fca08d'>
              <bucket>&quot;Waynesboro&quot;</bucket>
            </map>
            <map to='#fca08e'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#fca08e'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#fca18e'>
              <bucket>&quot;Perth Amboy&quot;</bucket>
            </map>
            <map to='#fca18f'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#fca18f'>
              <bucket>&quot;Edmonds&quot;</bucket>
            </map>
            <map to='#fca290'>
              <bucket>&quot;Beverly&quot;</bucket>
            </map>
            <map to='#fca290'>
              <bucket>&quot;Cranston&quot;</bucket>
            </map>
            <map to='#fca290'>
              <bucket>&quot;Trenton&quot;</bucket>
            </map>
            <map to='#fca391'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#fca391'>
              <bucket>&quot;Mount Vernon&quot;</bucket>
            </map>
            <map to='#fda392'>
              <bucket>&quot;Auburn&quot;</bucket>
            </map>
            <map to='#fda392'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#fda493'>
              <bucket>&quot;Burbank&quot;</bucket>
            </map>
            <map to='#fda493'>
              <bucket>&quot;Paterson&quot;</bucket>
            </map>
            <map to='#fda493'>
              <bucket>&quot;Westminster&quot;</bucket>
            </map>
            <map to='#fda594'>
              <bucket>&quot;Jonesboro&quot;</bucket>
            </map>
            <map to='#fda594'>
              <bucket>&quot;Oceanside&quot;</bucket>
            </map>
            <map to='#fda595'>
              <bucket>&quot;Smyrna&quot;</bucket>
            </map>
            <map to='#fda695'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#fda695'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#fda696'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#fda796'>
              <bucket>&quot;Huntington Beach&quot;</bucket>
            </map>
            <map to='#fda797'>
              <bucket>&quot;Harrisonburg&quot;</bucket>
            </map>
            <map to='#fda797'>
              <bucket>&quot;Watertown&quot;</bucket>
            </map>
            <map to='#fda898'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#fda898'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#fda898'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#fda999'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#fda999'>
              <bucket>&quot;Dover&quot;</bucket>
            </map>
            <map to='#fda99a'>
              <bucket>&quot;Inglewood&quot;</bucket>
            </map>
            <map to='#fdaa9a'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#fdaa9a'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#fdaa9b'>
              <bucket>&quot;Warwick&quot;</bucket>
            </map>
            <map to='#fdab9b'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#fdab9c'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#fdab9c'>
              <bucket>&quot;Newport News&quot;</bucket>
            </map>
            <map to='#feac9d'>
              <bucket>&quot;Brentwood&quot;</bucket>
            </map>
            <map to='#feac9d'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#feac9d'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#fead9e'>
              <bucket>&quot;Anaheim&quot;</bucket>
            </map>
            <map to='#fead9e'>
              <bucket>&quot;Plainfield&quot;</bucket>
            </map>
            <map to='#fead9e'>
              <bucket>&quot;Roseville&quot;</bucket>
            </map>
            <map to='#feae9f'>
              <bucket>&quot;Chesapeake&quot;</bucket>
            </map>
            <map to='#feae9f'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#feaea0'>
              <bucket>&quot;Jamestown&quot;</bucket>
            </map>
            <map to='#feafa0'>
              <bucket>&quot;Lakeville&quot;</bucket>
            </map>
            <map to='#feafa0'>
              <bucket>&quot;Lowell&quot;</bucket>
            </map>
            <map to='#feafa1'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#feb0a1'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#feb0a2'>
              <bucket>&quot;Great Falls&quot;</bucket>
            </map>
            <map to='#feb0a2'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#feb1a2'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#feb1a3'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#feb1a3'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#feb2a4'>
              <bucket>&quot;Fayetteville&quot;</bucket>
            </map>
            <map to='#feb2a4'>
              <bucket>&quot;Morristown&quot;</bucket>
            </map>
            <map to='#feb2a4'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#feb3a5'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#feb3a5'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
            <map to='#feb3a6'>
              <bucket>&quot;Virginia Beach&quot;</bucket>
            </map>
            <map to='#feb4a6'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#feb4a6'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#feb4a7'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#feb5a7'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#feb5a8'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#feb5a8'>
              <bucket>&quot;North Las Vegas&quot;</bucket>
            </map>
            <map to='#feb6a8'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#feb6a9'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#feb6a9'>
              <bucket>&quot;Roswell&quot;</bucket>
            </map>
            <map to='#feb7aa'>
              <bucket>&quot;Lakewood&quot;</bucket>
            </map>
            <map to='#feb7aa'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#feb7aa'>
              <bucket>&quot;Yonkers&quot;</bucket>
            </map>
            <map to='#feb8ab'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#feb8ab'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#feb8ac'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#feb9ac'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#feb9ac'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#feb9ad'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#febaad'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#febaae'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#febaae'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#febbae'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#febbaf'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#febbaf'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#febcb0'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#febcb0'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#febcb0'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#febdb1'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#febdb1'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Ship Mode:nk]' palette='red_10_0' type='palette'>
            <map to='#ae123a'>
              <bucket>&quot;Standard Class&quot;</bucket>
            </map>
            <map to='#e33e43'>
              <bucket>&quot;Second Class&quot;</bucket>
            </map>
            <map to='#f8826b'>
              <bucket>&quot;Same Day&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;First Class&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' palette='red_10_0' type='palette'>
            <map to='#ae123a'>
              <bucket>&quot;West&quot;</bucket>
            </map>
            <map to='#e33e43'>
              <bucket>&quot;South&quot;</bucket>
            </map>
            <map to='#f8826b'>
              <bucket>&quot;East&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;Central&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='SampleSuperstore.csv' id='SampleSuperstore.csv_95D2C6DFB8174908B0C6BA3E8907D432'>
            <properties context=''>
              <relation connection='textscan.1y3q0o00boza4q1e1ra3v07mnl1e' name='SampleSuperstore.csv' table='[SampleSuperstore#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='Ship Mode' ordinal='0' />
                  <column datatype='string' name='Segment' ordinal='1' />
                  <column datatype='string' name='Country' ordinal='2' />
                  <column datatype='string' name='City' ordinal='3' />
                  <column datatype='string' name='State' ordinal='4' />
                  <column datatype='integer' name='Postal Code' ordinal='5' />
                  <column datatype='string' name='Region' ordinal='6' />
                  <column datatype='string' name='Category' ordinal='7' />
                  <column datatype='string' name='Sub-Category' ordinal='8' />
                  <column datatype='real' name='Sales' ordinal='9' />
                  <column datatype='integer' name='Quantity' ordinal='10' />
                  <column datatype='real' name='Discount' ordinal='11' />
                  <column datatype='real' name='Profit' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='City Wise Profit'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0qrxox00bz0b2f1ffvij10g48be1' />
          </datasources>
          <datasource-dependencies datasource='federated.0qrxox00bz0b2f1ffvij10g48be1'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:City:nk]' direction='DESC' using='[federated.0qrxox00bz0b2f1ffvij10g48be1].[sum:Profit:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:City:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0qrxox00bz0b2f1ffvij10g48be1].[sum:Profit:qk]</rows>
        <cols>[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:City:nk]</cols>
      </table>
      <simple-id uuid='{F5A67036-2D65-4A62-8C6F-BA3662B56E43}' />
    </worksheet>
    <worksheet name='City Wise Sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0qrxox00bz0b2f1ffvij10g48be1' />
          </datasources>
          <datasource-dependencies datasource='federated.0qrxox00bz0b2f1ffvij10g48be1'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:City:nk]' direction='DESC' using='[federated.0qrxox00bz0b2f1ffvij10g48be1].[sum:Sales:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:City:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0qrxox00bz0b2f1ffvij10g48be1].[sum:Sales:qk]</rows>
        <cols>[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:City:nk]</cols>
      </table>
      <simple-id uuid='{45C38EAC-3527-4EF3-91C4-75D7CD7FA3A0}' />
    </worksheet>
    <worksheet name='Geographical Represemtation'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0qrxox00bz0b2f1ffvij10g48be1' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0qrxox00bz0b2f1ffvij10g48be1'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:Category:nk]'>
            <groupfilter from='&quot;Furniture&quot;' function='range' level='[none:Category:nk]' to='&quot;Technology&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:City:nk]'>
            <groupfilter from='&quot;Aberdeen&quot;' function='range' level='[none:City:nk]' to='&quot;Yuma&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:State:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Alabama&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Arizona&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Arkansas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Colorado&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Delaware&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;District of Columbia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Idaho&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Illinois&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Indiana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Iowa&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Kansas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Kentucky&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Louisiana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Maine&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Maryland&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Massachusetts&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Michigan&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Minnesota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Mississippi&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Missouri&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Montana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Nebraska&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Nevada&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Hampshire&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Mexico&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New York&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;North Carolina&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;North Dakota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Ohio&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Oklahoma&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Oregon&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Pennsylvania&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Rhode Island&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;South Carolina&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;South Dakota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Tennessee&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Texas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Utah&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Vermont&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Virginia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Washington&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;West Virginia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Wisconsin&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Wyoming&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:Category:nk]</column>
            <column>[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:Country:nk]</column>
            <column>[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:City:nk]</column>
            <column>[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0qrxox00bz0b2f1ffvij10g48be1].[Longitude (generated)]' field-type='quantitative' max='-6535875.4314917894' min='-20197512.210663095' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0qrxox00bz0b2f1ffvij10g48be1].[Latitude (generated)]' field-type='quantitative' max='10064436.724207858' min='2243994.2244163542' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0qrxox00bz0b2f1ffvij10g48be1].[sum:Profit:qk]' num-steps='5' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:City:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:City:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:City:nk]' value='false' />
            <format attr='omit-on-special' field='[federated.0qrxox00bz0b2f1ffvij10g48be1].[Latitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.0qrxox00bz0b2f1ffvij10g48be1].[Latitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0qrxox00bz0b2f1ffvij10g48be1].[Latitude (generated)]' value='false' />
            <format attr='omit-on-special' field='[federated.0qrxox00bz0b2f1ffvij10g48be1].[Longitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.0qrxox00bz0b2f1ffvij10g48be1].[Longitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0qrxox00bz0b2f1ffvij10g48be1].[Longitude (generated)]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0qrxox00bz0b2f1ffvij10g48be1].[sum:Profit:qk]' />
              <text column='[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:State:nk]' />
              <lod column='[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:Country:nk]' />
              <geometry column='[federated.0qrxox00bz0b2f1ffvij10g48be1].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0qrxox00bz0b2f1ffvij10g48be1].[Latitude (generated)]</rows>
        <cols>[federated.0qrxox00bz0b2f1ffvij10g48be1].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{E5050199-F37E-4BD4-B659-226BB116E52A}' />
    </worksheet>
    <worksheet name='Region Wise Profit'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0qrxox00bz0b2f1ffvij10g48be1' />
          </datasources>
          <datasource-dependencies datasource='federated.0qrxox00bz0b2f1ffvij10g48be1'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:Ship Mode:nk]' />
              <text column='[federated.0qrxox00bz0b2f1ffvij10g48be1].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0qrxox00bz0b2f1ffvij10g48be1].[sum:Profit:qk]</rows>
        <cols>([federated.0qrxox00bz0b2f1ffvij10g48be1].[none:Region:nk] / [federated.0qrxox00bz0b2f1ffvij10g48be1].[none:Ship Mode:nk])</cols>
      </table>
      <simple-id uuid='{EAE6860E-0515-4AD9-96BB-913517D44090}' />
    </worksheet>
    <worksheet name='Segment and region wise profit'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0qrxox00bz0b2f1ffvij10g48be1' />
          </datasources>
          <datasource-dependencies datasource='federated.0qrxox00bz0b2f1ffvij10g48be1'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:Segment:nk]'>
            <groupfilter from='&quot;Consumer&quot;' function='range' level='[none:Segment:nk]' to='&quot;Home Office&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:Segment:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:Region:nk]' />
              <text column='[federated.0qrxox00bz0b2f1ffvij10g48be1].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='on' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.6811602115631104' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0qrxox00bz0b2f1ffvij10g48be1].[sum:Sales:qk]</rows>
        <cols>[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:Segment:nk]</cols>
      </table>
      <simple-id uuid='{2E7DC268-A093-482A-A3DD-65314590F565}' />
    </worksheet>
    <worksheet name='Shipping Mode'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Shipping Mode&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0qrxox00bz0b2f1ffvij10g48be1' />
          </datasources>
          <datasource-dependencies datasource='federated.0qrxox00bz0b2f1ffvij10g48be1'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:Region:nk]' />
              <text column='[federated.0qrxox00bz0b2f1ffvij10g48be1].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='on' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
                <format attr='font-weight' value='bold' />
                <format attr='font-style' value='italic' />
                <format attr='text-decoration' value='underline' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0qrxox00bz0b2f1ffvij10g48be1].[sum:Profit:qk]</rows>
        <cols>[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:Ship Mode:nk]</cols>
      </table>
      <simple-id uuid='{12E32D79-3499-406B-B62E-6D381D5EA8AA}' />
    </worksheet>
    <worksheet name='State Wise Sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0qrxox00bz0b2f1ffvij10g48be1' />
          </datasources>
          <datasource-dependencies datasource='federated.0qrxox00bz0b2f1ffvij10g48be1'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:State:nk]' direction='DESC' using='[federated.0qrxox00bz0b2f1ffvij10g48be1].[sum:Sales:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:State:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0qrxox00bz0b2f1ffvij10g48be1].[sum:Sales:qk]</rows>
        <cols>[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:State:nk]</cols>
      </table>
      <simple-id uuid='{14DD8597-50D5-467D-8895-F7EB0349F0C7}' />
    </worksheet>
    <worksheet name='State wise profit'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0qrxox00bz0b2f1ffvij10g48be1' />
          </datasources>
          <datasource-dependencies datasource='federated.0qrxox00bz0b2f1ffvij10g48be1'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:State:nk]' direction='DESC' using='[federated.0qrxox00bz0b2f1ffvij10g48be1].[sum:Profit:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:State:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0qrxox00bz0b2f1ffvij10g48be1].[sum:Profit:qk]</rows>
        <cols>[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:State:nk]</cols>
      </table>
      <simple-id uuid='{1BB17111-6281-4B02-9D0C-215F22EDC024}' />
    </worksheet>
    <worksheet name='Sub-category'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0qrxox00bz0b2f1ffvij10g48be1' />
          </datasources>
          <datasource-dependencies datasource='federated.0qrxox00bz0b2f1ffvij10g48be1'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:Segment:nk]' />
              <text column='[federated.0qrxox00bz0b2f1ffvij10g48be1].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='0' />
                <format attr='text-align' value='auto' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
                <format attr='font-weight' value='bold' />
                <format attr='font-style' value='italic' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0qrxox00bz0b2f1ffvij10g48be1].[sum:Profit:qk]</rows>
        <cols>([federated.0qrxox00bz0b2f1ffvij10g48be1].[none:Category:nk] / [federated.0qrxox00bz0b2f1ffvij10g48be1].[none:Sub-Category:nk])</cols>
      </table>
      <simple-id uuid='{44A96507-A307-4661-AA62-D121BE3D25E1}' />
    </worksheet>
    <worksheet name='Sub-category Word Cloud'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.0qrxox00bz0b2f1ffvij10g48be1' />
          </datasources>
          <datasource-dependencies datasource='federated.0qrxox00bz0b2f1ffvij10g48be1'>
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='Count' name='[cnt:Sub-Category:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:Sub-Category:nk]' direction='DESC' using='[federated.0qrxox00bz0b2f1ffvij10g48be1].[cnt:Sub-Category:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <color column='[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:Sub-Category:nk]' />
              <size column='[federated.0qrxox00bz0b2f1ffvij10g48be1].[cnt:Sub-Category:qk]' />
              <text column='[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:Sub-Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{0FB5BEC1-0DA6-45DB-ACF4-341D702FDEFF}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Storyboard for Exploratory Data Analysis' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#f17b79'>Storyboard for Exploratory Data Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='story-description'>
          <format attr='border-width' id='story-description_13' value='0' />
          <format attr='border-style' id='story-description_13' value='none' />
        </style-rule>
        <style-rule element='story-point-caption'>
          <format attr='width' value='260' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97298' id='15' param='vert' removable='false' w='98614' x='693' y='1351'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='6587' id='16' w='98614' x='693' y='1351'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='90711' id='11' param='vert' removable='false' w='98614' x='693' y='7938'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='90711' id='1' param='vert' removable='false' w='98614' x='693' y='7938'>
                <zone _.fcp.SetMembershipControl.false...type='flipboard-nav' _.fcp.SetMembershipControl.true...type-v2='flipboard-nav' fixed-size='106' h='17905' id='4' is-fixed='true' paired-zone-id='5' removable='false' w='98614' x='693' y='7938' />
                <zone _.fcp.SetMembershipControl.false...type='flipboard' _.fcp.SetMembershipControl.true...type-v2='flipboard' h='72806' id='5' paired-zone-id='4' removable='false' w='98614' x='693' y='25843'>
                  <flipboard active-id='3' nav-type='caption' show-nav-arrows='true'>
                    <story-points>
                      <story-point caption='This is the graphical representation on profit of various cities of USA' captured-sheet='Geographical Represemtation' id='3'>
                        <capturedDeltas>
                          <worksheet name='Geographical Represemtation'>
                            <style delta-type='added'>
                              <style-rule element='axis'>
                                <encoding attr='space' class='0' field='[federated.0qrxox00bz0b2f1ffvij10g48be1].[Latitude (generated)]' field-type='quantitative' max='6516542.5125838062' min='2644215.1151953675' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                                <encoding attr='space' class='0' field='[federated.0qrxox00bz0b2f1ffvij10g48be1].[Longitude (generated)]' field-type='quantitative' max='-6171577.0749781011' min='-15169593.824491169' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                              </style-rule>
                            </style>
                          </worksheet>
                        </capturedDeltas>
                      </story-point>
                      <story-point caption='This represents the profit earned by various modes in 4 given region' captured-sheet='Shipping Mode' id='4' />
                      <story-point caption='Segment wise sales and profit chart' captured-sheet='Segment and region wise profit' id='12' />
                      <story-point caption='This graph shows the profit earn or loss incured by three major categories with various sub categories.' captured-sheet='Sub-category' id='5' />
                      <story-point caption='This cloud tell us which product from sub catrgory is shipped most.' captured-sheet='Sub-category Word Cloud' id='7' />
                      <story-point caption='Graphical representation of City wise Profit of USA' captured-sheet='City Wise Profit' id='8' />
                      <story-point caption='Region wise profit gained by various shippment modes' captured-sheet='Region Wise Profit' id='9' />
                      <story-point caption='Conclusion' captured-sheet='' id='13' />
                    </story-points>
                  </flipboard>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='56757' hidden='true' id='13' story-point-id='13' w='58095' x='17576' y='24493'>
          <formatted-text>
            <run fontsize='22'>After the analysis i understood that same day shipping mode is giving us least profit so we need to work their and find the reason for the loss and also we need to find why there is loss in Texas, Ohio, Pennsylvania and also work on the furniture category and decrease the loss and increase the profit</run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{CF1648F7-CEDD-41E2-A652-668EC39523B0}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Shipping Mode'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='202'>
            <card pane-specification-id='0' param='[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:Region:nk]</field>
            <field>[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:Segment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1558B68D-A958-4257-9242-16BA50BF5972}' />
    </window>
    <window class='worksheet' name='Sub-category'>
      <cards>
        <edge name='left'>
          <strip size='145'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:Segment:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:City:nk]</field>
            <field>[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:Region:nk]</field>
            <field>[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:Segment:nk]</field>
            <field>[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:Ship Mode:nk]</field>
            <field>[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:State:nk]</field>
            <field>[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:Sub-Category:nk]</field>
            <field>[federated.0qrxox00bz0b2f1ffvij10g48be1].[sum:Profit:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{39E209D7-0FCE-47E1-90F3-254A59D24168}' />
    </window>
    <window class='worksheet' name='City Wise Profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:City:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:City:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4F7F41A3-AE3B-40FB-8BE2-D5DBC31653CE}' />
    </window>
    <window class='worksheet' name='State wise profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:State:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0qrxox00bz0b2f1ffvij10g48be1].[:Measure Names]</field>
            <field>[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:Category:nk]</field>
            <field>[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:Region:nk]</field>
            <field>[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:Ship Mode:nk]</field>
            <field>[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:State:nk]</field>
            <field>[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='2' />
      </viewpoint>
      <simple-id uuid='{D476EC6A-954A-4DD0-AC39-D96060DB8D47}' />
    </window>
    <window class='worksheet' name='Region Wise Profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:Ship Mode:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:Ship Mode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FAC013F2-5F0C-4B07-892E-B0D7BCDE7BBF}' />
    </window>
    <window class='worksheet' name='City Wise Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:City:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:City:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A13E695B-E7AD-4F64-A690-F219B5FA1222}' />
    </window>
    <window class='worksheet' name='State Wise Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:State:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DDFE4048-D858-47AD-8FEF-E8D644FEAC6E}' />
    </window>
    <window class='worksheet' name='Segment and region wise profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='183'>
            <card pane-specification-id='0' param='[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:Region:nk]</field>
            <field>[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:Segment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{081972A3-064F-4FBC-8780-4C6A182F6031}' />
    </window>
    <window class='worksheet' name='Geographical Represemtation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0qrxox00bz0b2f1ffvij10g48be1].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:City:nk]</field>
            <field>[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:Country:nk]</field>
            <field>[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:Region:nk]</field>
            <field>[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:State:nk]</field>
            <field>[federated.0qrxox00bz0b2f1ffvij10g48be1].[sum:Profit:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{ED74CD28-55E6-4120-9AB9-58A01E8669F5}' />
    </window>
    <window class='worksheet' name='Sub-category Word Cloud'>
      <cards>
        <edge name='left'>
          <strip size='162'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:Category:nk]</field>
            <field>[federated.0qrxox00bz0b2f1ffvij10g48be1].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B6CC934A-7CEF-4318-8A01-ECC940EF42DC}' />
    </window>
    <window class='dashboard' maximized='true' name='Storyboard for Exploratory Data Analysis'>
      <viewpoints />
      <active id='4' />
      <simple-id uuid='{21308C52-55FC-4411-955E-E28E21EF0FE5}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='City Wise Profit' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='City Wise Sales' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Geographical Represemtation' width='192'>
      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
      LKM5v4XDAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Region Wise Profit' width='192'>
      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
      soISGYGusxOd7vq09fPzhv6v/0zan8mfTqtD0kifScM/tIY6Mwm73X41231DsZP9n8ZOUfD5
      fFfzdf0/mfdmMfXJ+Do7h2J6NV+y148/Pu1qmn40Wi1azWfypcj4fTeJKQqKT0Zjs12XL5fF
      TH/uNBQU9J+J6VB+/ciKjFarRfvZmMoyfr8frSxjvprfT/LniQ1DP386Ov3N86fX6fnsQ/PZ
      mPZ5XXjtdnp7e+nq6kLr/TR28tU0h/KlvS5Nn8+HpNxxN4nCGy//lHNdBlbNiqE1vBB/zQfk
      b3iUKVYNiqLQ3NxMSkrKDV2QnyQV6PVPvrvT6xMtjTtJu6mpidSra6vHKs1Ark+0NG52/Xax
      u1WaIygBJDY+9o3rL8372nUfP5nWLLhztFrtDSWIIDBGErtJOQ4gEIwWQgCCoEYIQBDUCAEI
      ghohAEFQIwQgCGqEAARBjRCAIKgRAhAENUIAgqBGCEAQ1AgBCIKau7IirKdnuGPSwO12YzQa
      xe8+R1dX17C/CdSeoih4vd5hJybKsowsy9dN774Zfr8fGP60HJ/Ph0ajGXaXP4/Hg16vH3bj
      gtGM3efTvCsCiIyMJD09fVhHApkx2tjYOKytL5I9YNTsfbI5wHDHuwYqgE/WLNxsj6fPEqgA
      WlpaiIuLG3YG52jGbkwEEAiBZigQ5d9sEYoaezB6/imyn8P7d3GproXMknUUz0gJyO5wBOJf
      IMccfTJXfriHHwI/Jy0QW0BAO4G31lZw4lQDV3xmHn9oPUaVx5Z9Ph7jIgBffxuvvvMedeXV
      3PfU3zEv69Z7giYmJg5rb7DjItvfPUhkYhb3Li8h1GjgVnENxN7uP/6GuiY71qlFPPHl2+8u
      MZw9xe/lwM7X0GUsx1ddrVoA/sFOtr/zLhfLalj91W9SnHfrt7tOpxv2uCNnZwO/3/ERoXFT
      WbF8EWFm4y1j99kDsG+FvbGM/3mrjHZ7L3/9naeJu3Fvs2sEchRTffVxfr/fxvKZ4fR6IVaF
      APwuO3946w1qKy9QuvUvWTIrfXwawT5nP83VJ0mePQ+316PanqQ3EWqxgquH11/7HXaVJrs6
      WlAi4jDKTtW+aXRGHvmL/829szO5Z+Uy1fZ87kFaqipInFOEx+tWbU/SGwm1hKDx9vH6a6/Q
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Segment and region wise profit' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Shipping Mode' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAUtklEQVR4nO3deXgU933H8ffMnlqtVqv7PhASEhIIgcFcxsYYG9t1bNcxxmlix3lyOHHS
      tE7T5kmfHM3T5EmbNmniI3lyNEnTBJPEdXxhO7Ed22AOg0GAAAlJCJ3oPlbHnrMz/YPERnVj
      BFmxWs339Rdo95n5anc+mpnfb74zimEYBkKYlBrvAoSIJwmAMDUJgDA1CYAwNQmAmHV7n93O
      Q49+h589uYsfPfIjRoIh+k+30D3kIxgMokV1AH7wlQ9jhPp58L7PMaxHCQaD6LpBODTJ44/9
      N4FwhEAwRCzHbawxW5IQf4Jhs+FJzaamspAnXnqMb32pgZrqDfR272HSVU5m9mIe+MAmRlNz
      eGV3PZrNye6dO2hp6aEgr4ATLZ2Eg0GG2r/ArmMdfPJr32d9WWpMapM9gJhlOlZXFps21PLy
      cy/gySxj85oifAEwFJW6tavRxnwAaFM2nti5j6qiTPpGJlizZgX9bQ2kli0jx+NkYFJn63tv
      wW2L3WaryDyAmG2jPS28tPcIy9dfR3i4n0wv+IJuml77T06py7nr1usoznTT1HiEUMSOx2Yj
      ozCV3bsOs2bjRtoO7SbkymJRtpP9jQPcuHkDdosSk9okACJuAhOjGI5UXPb4HYhIAISpzcpJ
      8LFjx/B4PLOxaCFialYC4PF4KC0tnY1FCxFTMgokTE0CIExNAiBMTQIgTE0CIExNAiBMTQIg
      TO2C8wBBXx8PbX+ev33fZn722FNkVa/HPdZA04iTa6vTGEpZxGTjIdb+xW2kOS2Xo2YhYuaC
      ewDfRICe3haaD76JT1NxueBkh4/cyDANbU089I1/Ib12g2z8IiFdMAA5hQvwOC1YlSAli1dw
      4LXXCRsaIcXAabFx3U03cvD3rxI2oLOzk/b29pg2LAgxm2Z0KcSWTVtYdEUdbU8+zU233Umq
      v5XjgzZWL0xh3FmEw9fKoC9IcXExAO3t7bNZsxAxMytXg7a3t8u1QCIhyCiQMDUJgDA1CYAw
      NQmAMDUJgDA1CYAwNQmAMDUJgDA1CYAwNQmAMDUJgDA1CYAwNQmAMLULXg5t6Br7Dh1h3aqV
      TA110DpkxRNup2HQxpUL3Uw4CtD7TpG9+AppihEJ54IB6D5Vz8M/e4y1K5bw5K9+wqTnagJD
      R8hOdvLGiMrupnE2Xn0jlbLxiwR0wQAULV5Fed7TnN7/Ww62DGF1N1KQacNhqAQiYSyqwfhk
      CMOArq5OdF2XjjCRMGbUEVZWWkb5+tv42uIa9h0OoEzVc3LYzqaydPJXLENveY1O31JKpCNM
      JBjpCBOmJqNAwtQkAMLUJADC1CQAwtQkAMLUJADC1CQAwtQkAMLUJADC1CQAwtQkAMLUJADC
      1CQAwtRmcDm0wdDIKOkpLjo6u0nLKcSmTTASUMjy2IioLoygD0dKBg6rMvsVCxFDF+4IazrI
      Zx/9Nd/+9D2cbGrjxO8P4vafwa+7Wb7ATWs4kyQN7tx6CyABEInlgodA+RVXUJHnJLd8CZWF
      aSypKcNQU1mYZKV30sfvnnuO4iUrcNlUJiYmGB8fvxx1CxETFwyAajnX63vm4PN8Z/uLqIaT
      JGWMI6Mhijxe3nf/g5zZ9QSdYyEikQiRSGTWixYiVmbUEaZpGqoCES2KarFgUSBqgEVVMFBR
      DB1UFVU5dwgkHWEiUcyoJ9hqPfc2h+Xtt0/fdcgdIURikmFQYWoSAGFqEgBhahIAYWoSAGFq
      EgBhahIAYWoSAGFqEgBhahIAYWoSAGFqEgBhahIAYWoXvBp0YqCNL37vcf75ozfx6E+foXLt
      FvTO12kec3H90nTOuhYRaD7GDXfdLQ/JEwnngnuAiJKMXR2ns+EkKzfdxqnGvfSMW6h0apzq
      7eaH3/4mCzbcLBu/SEgXDEB6Vg4Oi0JKejI9XW2kpGSj6EFGdJ10p4ut932Y/c88yaSm09nZ
      SXt7uzwkTySMGXWENTY3sri8jP2791JSuxqLr53ToxYWF7jw2zJwBPoxUgrITLED0hEmEoc8
      JE+YmowCCVOTAAhTkwAIU5MACFOTAAhTkwAIU5MACFOTAAhTkwAIU5t2NageDfNf//5l2iLp
      uIFbP/wxFuelxqk0IWbftD2AHh3E5iohNNTH6FQEu12u8BTz27QAKDg5efB1oq5UsrMysKly
      hCTmt2lbuMWewee/8U+UZCZhSUnGm2SPV11CXBbv6Agb6+3CW1SLy9fFmYEJlhWnARDy9bDj
      8ecoW7WJ5NGTnBx2sL4ylVFXKaEzDVStu1aaYkTCeUcA0gsW4O08irf2SqoLvG/9vLdxP0Z6
      EQf2vYw16CfX5eBwg87Bxue5YtM21srGLxLQtEMgwzDo627l0JtHqd93gL6JwFuvBQNWlEiA
      qObEooToC2h4nElccf0d9B9+heGAJh1hIuFM2wNEI0PsfOEYbqeXD/3NR/Cc91rlhhtRm1tI
      L1yIPTRC/5RKfpqdsNWNtSYXFMgoLgbONcQIkQimBcDQx4mGvbjDPew+UM+G2iV4nDYAFKuD
      RdVL/vDOAjxZ5/6VDJCcffkqFiKGpgXAYs9n4w1VBKgCLSqHMmLemxYAVU1i+bp18apFiMtO
      ZrqEqUkAhKlJAISpSQCEqUkAhKlJAISpSQCEqUkAhKlJAISpSQCEqUkAhKld8BlhfxQe7+EX
      O54iq/oq3GPHaRp1sHFxGsPuCqZOHWbVllukI0wknBnvAVoOvMlIyMDp0GloGyIzOMCxlpM8
      9G//SkrVatn4RUKacQBUY4qSxSt547XdhA2dCAZ21cKG667l0K69RAykI0wknBk/IikaHue5
      3zxNTu1GvP5Wjg/aWFORgs9Zgn30FM7CWgq8TkAekSQShzwjTCQOTYPRwZgucsYnwULEXSgA
      x9+M6SJlGFSYmgRAmJoEQJiaBECYmgRAmJoEQJha/IZBTx6GgD9uq58VCyohPSveVYiLEL8A
      TPjAPxm31c+KSDjeFcxresBPZM/vYrpMmQgTCcSAGF+4ELcA6P4pmByP1+pnhaJFUOJdhLgo
      cQuA1lSPMdQfr9XPCmtZFZaC0niXIWZINwwZBRLmNR4MX9weIDDaQ9uQSkqkg+MDNlaWuZlw
      5MNAM+kVddIUIxKKN8kx8wAY0RC/eewHjHuuITBYT7Y7if2DFva2TrJm9SZuXyobv0gsR3oH
      Zx6A0/ufZ9+pQRyekxRm2kkyVKbCISKhAKHIuZPzrq5OdF2PW0dYVNdRUIgaBgYGNlVFNww0
      3cCivn16qioKmq5jU1UURU5bzcrrvIg9QPn62/l6VQ173/RjTB6iccTB5gXp5C5fTvTU7+nw
      LaY0js8I6xgd5x9e2MP9Vy7hP/YcIcedxMPv2cgTJ07zzdcP88DqWibCYTpGJ7i+oogXW7q4
      vbqMjWWFl71WMTeUpnku7hzAnVHBDVsAlrHl/Beq/yqWdV2SVKcDb5KDzOQk8lJcVGen47Ba
      2Lq0nJFAkHuXV9E9PsnD+46yoaSApxvPkGy3xbtscZGMqB7T5c2biTCLqpBss2K3WLi6tIC2
      UR+/PNZMiddDXoqLTt8Eezp6yU5O4ssv7yfZbqMmOz3eZYuLEJ0KM/RKc0yXOW8C8MODJ3DZ
      bTzTdIYu3wTZyUn8tqWThempWC0q7aMTdPkmyEp2oQAhLUowGsWF7AXMbN4E4DNXLY93CSIB
      yUSYMDUJgDA1CYAwLSXFLQEQ5mVMTMbvJHjsUBdaV2e8Vj8r0jZMkhTvIsTMKUoc+wHCGnpQ
      i+1C7Tbcd/wlWlcXwT37sC+rxVFXS3DfGzivWE64uRU1NRVrdhaTTz2DEQjEdPWxnqQRs8u5
      bu38OgRyXrkKe8VCogNDANirF2PNycFeUw0oONeuIVRfj6WwANXtjm+xIu6Ce/bOrwCoHg+h
      EydxrlqBdUEp1qxMtP4BomfPoriS0EdHSNm2lcipZqKDsb3JqkhM8yoAkdOnsebmog0N41y7
      Gu1sL0Y4DDYbis1GuKkZ1eNBTfOCXAUqmEczwQCKzU7w0GEAdJ9v2mvB+iNgteB/bRdEIjFv
      rhaJacYB0LUQvX0DeDJysGpTjIcUvMlWNNUJoUlsyanYLTP/q9o/rBHoj1xS0X96oUdiu7yL
      5AwZuOJawfwWChvUN8Z24GLGARhoa+KNY02cHgP3VCvjmptV5Sm0RnJwBsPccddtFxWAwRGN
      icEYjwLFWWFQRoFmk2GAFo3tMmd8DpBbUcvyygKqKovQVS+Lkm2cnfDx/NNPUVq3GrddZWpq
      iqmpqdhWKMQsmnEAOg7/joe3v0Syw4MDHw2+EIUeL+//+IO0vPI/dI+HCAQC+P1+eUieSBgz
      PgQqWHoNXy5fg9XuZEPdZwhHFZw2BR0ryqqFoFqxejIBZC/w5wr6QZ9nh1N2B1jnXu/FjANg
      tTtJtTvf+v8ff5Vz94Kwx7Qo0zv+5rl7p84nVcsgrzjeVbzDvBoGnS+0nnaYZ3fNUwtKUfPi
      XcU7SQDmIH2wF6O3K95lxJQyR+8EPm8CoDrsuIrz8Hf14sxKJxoMExocAVUhuSSfYP8wNo8b
      FIXwiO/cezvOoodjPBcxRx3o7udTT7/C+pJ8vnXzBn56uJGTAyNsqShh+9EmFqZ7yUpOoqF/
      iM9dvZLCVBNcKxXPq0FjLWVRKRlra1FQCI9N4F22iBNf+R5ZG1aQurSC4TcacBXnkVZXxURL
      J56qBfT9dg/9L++Pd+mXxZWFOTy4fgVXleShKArdvknGQ2EOnx0gHNXxOO00DY5Qnu5l2B8w
      RQBs3pT5cy2Qv6uX9OXVjBw6gWqzok0F0DWNzPUrcC88d/I18kYDANYUFxaXk4nW+dWP8G7G
      giFahkdJsll5obmDqqw0vE4HIS3KsrxMbBYVi6rSP+mnMist3uVeFtr45PwJQNXffwjV6cCZ
      nUH5J7YxeugkCz96J5NtXUSDYZy5mRTffRP+rj4cGV60qQDRYCjeZV82zzSeIaTp/ODgcX7V
      0MwbXX1EdR2H1ULT4CjjwTDhaBSnzYLTOm8ODN5Vzua18+cQKNAzQODsIMkLCuh47Dnc5cUk
      5WcR6Blgqr2HpLwsIhPn5ieCfUOgKGgT8+wZZe/i/XWV8S5hzlGs1vkTgNbv7oh3CTHT1zpG
      6PRQvMuIqeyrgqTGu4j/o3fna/MnAPPJ6QP9jB2dX8OgK26fmnMBgHnWECPehaqS/56NeGoW
      vvWjtJU12DNSsWemkXX1Sjw1C8m/9VpQzbNZmOc3Nbnk4jxyt6wj9/p1AGSsq2PJlz6BNdlF
      9ec/QsbaZah2O2l1VbgXFMS52stHAmASaStrGG86Q3h0HMWiMrz/KOOnzpB7/VqSSwuITgVw
      FeVi86Yw1dkb73IvGwmASQT7hnBkphHxTVL2sa04s9KZbO2k/efP0LF9JwOvHqDozhvwnWjF
      iMa462QOu4STYIMnf/5dmseS2LwknX53JZON9Wzeuk0ekjeH2VLd5+ZAMr2oFgt5t1yDrkUp
      +cB7AEhfXcvAawcxIhro5unnuIQABOgeNSh3hGjq6WDHM0/xxa9/Szb+Oa535654lzAnXUIA
      bBh6CJ/hJNuRxB333Mu+Z5+m5oF7GOrpRtd1xsfHOXv2LHb79D6BcDiMYRjY7XYqHv08xh8u
      RItoGrquY7VasZw3AhHVo2haFFVVsZ03O6kbBpFIBEVRsNts71wHYLfZpj0A70+uIxpFi0ax
      qCrWGa4jFA4DYLfbUM57NryRkUpPT8+5dVje/oMQjUbRNA2LxTJ9Hbr+9jrO+6yKcqCowvEu
      30Hi0cKjDA29PbcRiUTQdR2bzYb6/4w6/fEzU1UV2x8+f91tZ9mzD8X0u7+kAGy9ZTOnhq0s
      LUpmyp6Fs7aQyakIxec9JC8/P//dF5OVdfGrNgnLqmVouRnxLiOmUqorcWZm/tnLyc6PbVOB
      YsxCA297ezulpaWxXqwQMSejQMLUJADC1CQAwtQkAMLUJADC1CQAwtRmpR9gZGRkNhZ7Sfx+
      Py7X3Lln81yqZy7VAvGpZ1YCkJ6ePmfmAaLR6LRZ2XibS3Mk8tnM0iHQXPqrMpe+YJDP5t3E
      47OZlZngy+HlHd/glXYHtdVV5GfmU7UwDYvNxfhUAPfUGX5xBD69bR2v79zBkS4fqdkVjPja
      uf+uO+kfmSA7K4OhoWEyc3LxDfTh9GbhdTsvvOIEMHLmMI9uf4kUdyr3fuSDTA71483MIDg+
      iWG1Eo1oZGen03u2n8zcPJLsVr76hfvJLlxKMKmY+++6lr6BUdK8adicDsLhMJ4UNwn5UCkj
      ypM/fpR2v07Zkmu5ti6fSc1KVqqT3v6RxO0JDoeDRKJ28nK8HDnQxJO/fJYrF1bycneI9y7P
      58xAIUY0woHmER548JMYAT8P/7SJ3tMNPPL9H1O6ZA3Hm1u46+br2b7jCdbffg/33XrVvBgV
      sLu85GSkkJJVQtR3ll//5BEshWW01g/hcPooyEsnMzmZZ3e9Sd2WD/KP920h5MrmYx//FI98
      5yG6uk/xi+9+n7Saq8ktzCPoi3DPtpvi/WtdIoWcvAIGe8fIy1T56mf/jtaAi203LGEwmsg3
      xnK4ue3uD7KhrgyApJxi6tZfw5IMjTHdRorTCRYrua4o9UePs/PZ5/FrOvtff4WcglyUtGKu
      LM+gpWeM6zeuoq2xhflyQ3L/1AQLaq5AHzzKrhdfxO/Kh3CA3NJayisKWFZVwsiQn5vvvpfV
      NSUAGKEpmhuPMWk4ObnvVTy5+SQXL2H04EtUrLoqMf/6A4YRJWRNYsXSSvYd3IM7r4Z7tt2C
      w9DJLyhM3EOg4f4urJ5cUh0G3WfHCEcnKcrwsP9YG8tqK+nqGaW6spTI1CiH6o9TVFWHHvKR
      pAfoGYuQk5lOR/sZKpYso/fUUVz5lSzIT0/YL/p80bCfo4cPo3qLqCpw0dDURXZ+JkY0CZsl
      gMthR7E7OXW8ifLa5WS4HbQeP0D3UIjKZStICg/S1jdJZrKDx597lU/+9UdxJOwHYzDU08aJ
      tj5q6lYSGTpNXyCJ6tI06o82J24AxOwzdI2wZuCwz70HW8SKBECYWuKeAwgRAxIAYWoSAGFq
      EgBhahIAYWoSAGFq/wtCWYrjHrMZOwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='State Wise Sales' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='State wise profit' width='192'>
      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
      Zc+yAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Storyboard for Exploratory Data Analysis' width='192'>
      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
      Bp5q/D9iQARjj7ehKwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sub-category' width='192'>
      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
      JA5NZhBzAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sub-category Word Cloud' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
